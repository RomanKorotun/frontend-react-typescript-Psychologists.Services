{"version":3,"file":"static/js/118.749d3517.chunk.js","mappings":"8HAEO,MAAMA,EAAyBC,GACpCA,EAAMC,aAAaC,cACRC,EAAwBH,GACnCA,EAAMC,aAAaG,aACRC,EAAoBL,GAC/BA,EAAMC,aAAaK,SACRC,EAA4BP,GACvCA,EAAMC,aAAaO,iBACRC,EAAuBT,GAClCA,EAAMC,aAAaS,YACRC,EAAmBX,GAAqBA,EAAMC,aAAaW,QAC3DC,EAAuBb,GAClCA,EAAMC,aAAaa,YACRC,EAA4Bf,GACvCA,EAAMC,aAAae,iBCJRC,EAAkBA,KAUtB,CACLb,cAVmBc,EAAAA,EAAAA,IAAYf,GAW/BD,eAVoBgB,EAAAA,EAAAA,IAAYnB,GAWhCO,UAVeY,EAAAA,EAAAA,IAAYb,GAW3BG,kBAVuBU,EAAAA,EAAAA,IAAYX,GAWnCG,aAVkBQ,EAAAA,EAAAA,IAAYT,GAW9BG,SAVcM,EAAAA,EAAAA,IAAYP,GAW1BG,aAVkBI,EAAAA,EAAAA,IAAYL,GAW9BG,kBAVuBE,EAAAA,EAAAA,IAAYH,I,4JCVvC,MAAMI,EAAQC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8HAQlBC,EAAcJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oJAGRG,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,SAASC,gBAAgB,IAK9DC,EAAcV,EAAAA,GAAOW,EAACC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,oCAsC5B,EAlC4BU,KAC1B,MAAMC,GAAWC,EAAAA,EAAAA,OACX,YAAEzB,EAAW,QAAEE,IAAYK,EAAAA,EAAAA,MAE3B,GAAEmB,IAAOC,EAAAA,EAAAA,KAQf,OANAC,EAAAA,EAAAA,YAAU,KACJF,GACFF,GAASK,EAAAA,EAAAA,IAA8BH,GACzC,GACC,CAACF,EAAUE,KAGZI,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAAAC,UACNC,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAF,SAAA,CACP9B,IAAW4B,EAAAA,EAAAA,KAACK,EAAAA,EAAM,IAClBnC,IAAgBE,IACf+B,EAAAA,EAAAA,MAAAG,EAAAA,SAAA,CAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAACrB,EAAK,CAAAuB,SAAC,iBACPC,EAAAA,EAAAA,MAACnB,EAAW,CAAAkB,SAAA,EACVF,EAAAA,EAAAA,KAAA,OAAAE,SAAMhC,EAAYqC,eAAeC,QACjCL,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,SAAOhC,EAAYuC,SACxBN,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,SAAOhC,EAAYwC,SACxBV,EAAAA,EAAAA,KAACV,EAAW,CAACqB,OAAO,UAAUC,KAAM1C,EAAY2C,YAAYX,SACzDhC,EAAY2C,wBAMf,C","sources":["redux/appointments/appointmentsSelectors.ts","hooks/useAppointments.ts","page/AppointmentPage.tsx"],"sourcesContent":["import { RootState } from \"../store\";\r\n\r\nexport const reservedTimesSelector = (state: RootState) =>\r\n  state.appointments.reservedTimes;\r\nexport const selectedDateSelector = (state: RootState) =>\r\n  state.appointments.selectedDate;\r\nexport const clientIdSelector = (state: RootState) =>\r\n  state.appointments.clientId;\r\nexport const appointmentsListSelector = (state: RootState) =>\r\n  state.appointments.appointmentsList;\r\nexport const appointmentSelector = (state: RootState) =>\r\n  state.appointments.appointment;\r\nexport const loadingSelector = (state: RootState) => state.appointments.loading;\r\nexport const paymentInfoSelector = (state: RootState) =>\r\n  state.appointments.paymentInfo;\r\nexport const paymentSignatureSelector = (state: RootState) =>\r\n  state.appointments.paymentSignature;\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  appointmentsListSelector,\r\n  clientIdSelector,\r\n  reservedTimesSelector,\r\n  selectedDateSelector,\r\n  loadingSelector,\r\n  paymentInfoSelector,\r\n  paymentSignatureSelector,\r\n  appointmentSelector,\r\n} from \"../redux/appointments/appointmentsSelectors\";\r\n\r\nexport const useAppointments = () => {\r\n  const selectedDate = useSelector(selectedDateSelector);\r\n  const reservedTimes = useSelector(reservedTimesSelector);\r\n  const clientId = useSelector(clientIdSelector);\r\n  const appointmentsList = useSelector(appointmentsListSelector);\r\n  const appointment = useSelector(appointmentSelector);\r\n  const loading = useSelector(loadingSelector);\r\n  const paymentInfo = useSelector(paymentInfoSelector);\r\n  const paymentSignature = useSelector(paymentSignatureSelector);\r\n\r\n  return {\r\n    selectedDate,\r\n    reservedTimes,\r\n    clientId,\r\n    appointmentsList,\r\n    appointment,\r\n    loading,\r\n    paymentInfo,\r\n    paymentSignature,\r\n  };\r\n};\r\n","import { FC, useEffect } from \"react\";\r\nimport { Container, Section } from \"../GlobaStyles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"../redux/store\";\r\nimport { getAppointmentForLoggedInUser } from \"../redux/api\";\r\nimport { useAppointments } from \"../hooks/useAppointments\";\r\nimport { Loader } from \"../components/Loader/Loader\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.div`\r\n  font-size: 30px;\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 799px) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst Appointment = styled.div`\r\n  display: inline-block;\r\n  line-height: 1.5;\r\n  background-color: ${({ theme }) => theme.bgColors.secondaryBgColor};\r\n  box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.2);\r\n  padding: 20px;\r\n`;\r\n\r\nconst MeetingLink = styled.a`\r\n  word-break: break-all;\r\n`;\r\n\r\nconst AppointmentPage: FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { appointment, loading } = useAppointments();\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(getAppointmentForLoggedInUser(id));\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        {loading && <Loader />}\r\n        {appointment && !loading && (\r\n          <>\r\n            <Title>Appointment</Title>\r\n            <Appointment>\r\n              <div>{appointment.psychologistId.name}</div>\r\n              <div>Date: {appointment.date}</div>\r\n              <div>Time: {appointment.time}</div>\r\n              <MeetingLink target=\"_blanck\" href={appointment.meetingLink}>\r\n                {appointment.meetingLink}\r\n              </MeetingLink>\r\n            </Appointment>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default AppointmentPage;\r\n"],"names":["reservedTimesSelector","state","appointments","reservedTimes","selectedDateSelector","selectedDate","clientIdSelector","clientId","appointmentsListSelector","appointmentsList","appointmentSelector","appointment","loadingSelector","loading","paymentInfoSelector","paymentInfo","paymentSignatureSelector","paymentSignature","useAppointments","useSelector","Title","styled","div","_templateObject","_taggedTemplateLiteral","Appointment","_templateObject2","_ref","theme","bgColors","secondaryBgColor","MeetingLink","a","_templateObject3","AppointmentPage","dispatch","useDispatch","id","useParams","useEffect","getAppointmentForLoggedInUser","_jsx","Section","children","_jsxs","Container","Loader","_Fragment","psychologistId","name","date","time","target","href","meetingLink"],"sourceRoot":""}