{"version":3,"file":"static/js/816.a778fb9d.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.tsx","components/PsychologistListCard/PsychologistListCard.styled.ts","components/Modal/ModalReview/ModalReview.styled.js","validationShemas/psychologistShemas.ts","components/StarRating/StarRating.styles.js","components/StarRating/StarRatingModal.tsx","components/TextArea/TextArea.tsx","components/Modal/ModalReview/ModalReview.tsx","components/StarRating/StarRatingComment.tsx","components/Modal/ModalAppointment/ModalAppointment.styled.tsx","components/DateAndTimePicker/SelectDate.tsx","components/DateAndTimePicker/SelectTime/SelectTime.styled.js","redux/appointments/appointmentsSelectors.ts","hooks/useAppointments.ts","components/DateAndTimePicker/SelectTime/SelectTime.tsx","components/Modal/ModalAppointment/ModalAppointment.tsx","components/PsychologistListCard/PsychologistListCard.tsx","redux/psychologists/psychologistsSelecrors.ts","hooks/usePsychologists.ts","hooks/useSocket.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ClipLoaderContainer = styled.div`\r\n  width: 35px;\r\n  height: 35px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  @media screen and (max-width: 850px) {\r\n    top: 60%;\r\n  }\r\n`;\r\n","import { FC } from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { ClipLoaderContainer } from \"./Loader.styled\";\r\n\r\nexport const Loader: FC = () => {\r\n  return (\r\n    <ClipLoaderContainer>\r\n      <ClipLoader color=\"#26ca20\" />\r\n    </ClipLoaderContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { ISvgStarProps } from \"../../interfaces/psychologistsInterfaces\";\r\n\r\nexport const InfoWrapper = styled.div`\r\n  @media screen and (max-width: 929px) {\r\n    margin-bottom: 20px;\r\n  }\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ImgCard = styled.div`\r\n  @media screen and (min-width: 930px) {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 20px;\r\n  }\r\n  display: inline-block;\r\n  border-radius: 30px;\r\n  border: 1px solid #deeee7;\r\n  padding: 12px;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 96px;\r\n  height: 96px;\r\n  border-radius: 15px;\r\n`;\r\n\r\nexport const Profession = styled.div`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: #8a8a89;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nexport const RatingPriceFavoriteWrapper = styled.div`\r\n  @media screen and (max-width: 699px) {\r\n    left: 20px;\r\n  }\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const RatingPriceWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SvgStar = styled.svg<ISvgStarProps>`\r\n  stroke: #191a15;\r\n  fill: ${({ $isFilled }) => ($isFilled ? \"#ffc531\" : \"white\")};\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const Delimiter = styled.span`\r\n  color: #cececd;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const Rating = styled.span`\r\n  @media screen and (max-width: 380px) {\r\n    font-size: 12px;\r\n  }\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  color: #191a15;\r\n`;\r\n\r\nexport const Price = styled.span`\r\n  @media screen and (max-width: 380px) {\r\n    font-size: 12px;\r\n  }\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  color: #191a15;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const PriceAccent = styled.span`\r\n  color: #38cd3e;\r\n`;\r\n\r\nexport const ButtonSvg = styled.button`\r\n  padding: 0;\r\n  height: 20px;\r\n  background-color: transparent;\r\n  border: none;\r\n`;\r\n\r\ninterface MySvgHeartProps {\r\n  $owner: string[] | undefined;\r\n}\r\n\r\nexport const SvgHeart = styled.svg<MySvgHeartProps>`\r\n  fill: ${({ $owner }) => {\r\n    if ($owner === undefined || $owner.length === 0) {\r\n      return \"none\";\r\n    } else {\r\n      return \"#54be96;\";\r\n    }\r\n  }};\r\n  stroke: ${({ $owner }) => {\r\n    if ($owner === undefined || $owner.length === 0) {\r\n      return \"#181914\";\r\n    } else {\r\n      return \"#54be96\";\r\n    }\r\n  }};\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  color: #191a15;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  max-width: 840px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n  column-gap: 4px;\r\n  row-gap: 8px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  background-color: #f3f3f3;\r\n  border-radius: 24px;\r\n  padding: 8px 16px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: #8a8a89;\r\n`;\r\n\r\nexport const ListItemAccent = styled.span`\r\n  color: #191a15;\r\n`;\r\n\r\nexport const About = styled.p`\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: #8a8b88;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const ButtonAction = styled.button`\r\n  border-radius: 30px;\r\n  padding: 14px 32px;\r\n  background-color: #54be96;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n  letter-spacing: -0.01em;\r\n  color: #fbfbfb;\r\n  border: none;\r\n  transition: transform 250ms, background-color 250ms;\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale(1.01);\r\n    background-color: #36a379;\r\n  }\r\n`;\r\n\r\nexport const ReviewList = styled.ul`\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n`;\r\n\r\nexport const ReviewerCard = styled.div`\r\n  display: flex;\r\n  gap: 12px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const ReviewerAvatar = styled.div`\r\n  width: 54px;\r\n  height: 54px;\r\n  border-radius: 50%;\r\n  background-color: #deeee7;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  color: #54be96;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ReviewerDate = styled.div`\r\n  font-size: 10px;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nexport const ReviewerName = styled.div`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  color: #191a15;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nexport const ReviewerComment = styled.p`\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.25;\r\n  color: #8a8b88;\r\n`;\r\n\r\nexport const NotFoundMessage = styled.div`\r\n  color: #8a8b88;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport Modal from \"react-modal\";\r\nimport { Field, Form, ErrorMessage } from \"formik\";\r\n\r\nexport const CustomModalReview = styled(Modal)`\r\n  position: relative;\r\n  z-index: 10000;\r\n  border-radius: 30px;\r\n  top: 50%;\r\n  left: 50%;\r\n  border: 1px solid #71736f;\r\n  background-color: #fbfbfb;\r\n  transform: translate(-50%, -50%);\r\n  overflow: auto;\r\n  width: 90%;\r\n  @media only screen and (max-width: 427px) {\r\n    padding: 20px;\r\n  }\r\n  @media only screen and (min-width: 428px) {\r\n    padding: 30px;\r\n  }\r\n  @media only screen and (min-width: 470px) {\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\nexport const TitleReviewForm = styled.div`\r\n  font-weight: 500;\r\n  font-size: 26px;\r\n  @media only screen and (min-width: 428px) {\r\n    font-size: 30px;\r\n  }\r\n  line-height: 1.2;\r\n  letter-spacing: -0.02em;\r\n  color: #191a15;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const DescriptionReviewForm = styled.p`\r\n  @media only screen and (max-width: 427px) {\r\n    font-size: 12px;\r\n  }\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.25;\r\n  color: rgba(25, 26, 21, 0.5);\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const FormReview = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const LabelStyled = styled.label`\r\n  position: relative;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const FieldStyled = styled(Field)`\r\n  min-height: 100px;\r\n  resize: none;\r\n  border: 1px solid #e9eae9;\r\n  border-radius: 12px;\r\n  padding-top: 12px;\r\n  padding-left: 12px;\r\n  height: 38px;\r\n  width: 100%;\r\n  &::placeholder {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.25;\r\n    color: #191a15;\r\n  }\r\n`;\r\n\r\nexport const ErrMsg = styled(ErrorMessage)`\r\n  font-size: 13px;\r\n  position: absolute;\r\n  bottom: -14px;\r\n  left: 5px;\r\n  color: #eb4c42;\r\n`;\r\n\r\nexport const ButtonSubmit = styled.button`\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n  letter-spacing: -0.01em;\r\n  color: #fbfbfb;\r\n  border-radius: 30px;\r\n  background-color: #54be96;\r\n  border: none;\r\n`;\r\n","import * as Yup from \"yup\";\r\n\r\nconst emailRegexp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\nexport const ReviewShema = Yup.object().shape({\r\n  rating: Yup.number()\r\n    .required(\"Required\")\r\n    .test(\"is-not-zero\", \"Required\", (value) => value !== 0),\r\n  comment: Yup.string().required(\"Required\"),\r\n});\r\n\r\nexport const AppointmentShema = Yup.object().shape({\r\n  client_name: Yup.string().required(\"Required\"),\r\n  client_phone: Yup.string().required(\"Required\"),\r\n  client_email: Yup.string()\r\n    .matches(emailRegexp, \"Invalid email\")\r\n    .required(\"Required\"),\r\n  // comment: Yup.string(),\r\n  date: Yup.string().required(\"Required\"),\r\n  time: Yup.string().required(\"Required\"),\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const SvgStar = styled.svg`\r\n  width: 16px;\r\n  height: 16px;\r\n  stroke: #191a15;\r\n`;\r\n","import { FC } from \"react\";\r\nimport { IStarRatingModal } from \"../../interfaces/reviewsInterface\";\r\nimport sprite from \"../../images/icons.svg\";\r\nimport { SvgStar } from \"./StarRating.styles\";\r\n\r\nexport const StarRatingModal: FC<IStarRatingModal> = ({\r\n  totalStars,\r\n  onStarClick,\r\n  selectedStars,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {[...Array(totalStars)].map((_, index) => (\r\n        <SvgStar\r\n          key={index}\r\n          onClick={() => onStarClick(index + 1)}\r\n          fill={index < selectedStars ? \"#ffc531\" : \"#fbfbfb\"}\r\n        >\r\n          <use href={`${sprite}#star-icon`} />\r\n        </SvgStar>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { FieldProps } from \"formik\";\r\nimport { FC } from \"react\";\r\n\r\ninterface TextAreaProps extends FieldProps {}\r\n\r\nexport const TextArea: FC<TextAreaProps> = ({ field, form, ...props }) => {\r\n  return <textarea {...field} {...props} />;\r\n};\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport { Formik, FormikProps } from \"formik\";\r\nimport {\r\n  ButtonSubmit,\r\n  CustomModalReview,\r\n  DescriptionReviewForm,\r\n  FieldStyled,\r\n  FormReview,\r\n  LabelStyled,\r\n  TitleReviewForm,\r\n  ErrMsg,\r\n} from \"./ModalReview.styled\";\r\nimport { IModalRevievProps } from \"../../../interfaces/authInterfaces\";\r\nimport { ReviewShema } from \"../../../validationShemas/psychologistShemas\";\r\nimport { StarRatingModal } from \"../../StarRating/StarRatingModal\";\r\nimport { IReview } from \"../../../interfaces/reviewsInterface\";\r\nimport { TextArea } from \"../../TextArea/TextArea\";\r\nimport { AppDispatch } from \"../../../redux/store\";\r\nimport { addReviewForLoggedInUser } from \"../../../redux/api\";\r\nimport { CloseModalButton } from \"../../CloseModalButton/CloseModalButton\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport const ModalReview: FC<IModalRevievProps> = ({\r\n  id,\r\n  isOpenModal,\r\n  onToggleModal,\r\n}) => {\r\n  const [rating, setRating] = useState<number>(0);\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const handleSubmit = (values: IReview) => {\r\n    dispatch(\r\n      addReviewForLoggedInUser({\r\n        id,\r\n        rating: values.rating,\r\n        comment: values.comment,\r\n      })\r\n    );\r\n    onToggleModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isOpenModal && setRating(0);\r\n    };\r\n  }, [isOpenModal]);\r\n\r\n  const modalStyles = {\r\n    overlay: {\r\n      zIndex: 1000,\r\n    },\r\n    content: {\r\n      zIndex: 1000,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <CustomModalReview\r\n      isOpen={isOpenModal}\r\n      onRequestClose={onToggleModal}\r\n      contentLabel=\"Review Modal\"\r\n      style={modalStyles}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          rating: 0,\r\n          comment: \"\",\r\n        }}\r\n        validationSchema={ReviewShema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ setFieldValue }: FormikProps<IReview>) => (\r\n          <>\r\n            <TitleReviewForm>Review</TitleReviewForm>\r\n            <DescriptionReviewForm>\r\n              Your feedback is very important to us. To improve the quality of\r\n              our service, we invite you to rate your experience with the\r\n              psychologist. Please leave your comments and a rating from 1 to 5.\r\n            </DescriptionReviewForm>\r\n            <FormReview>\r\n              <LabelStyled>\r\n                <StarRatingModal\r\n                  totalStars={5}\r\n                  onStarClick={(index) => {\r\n                    setFieldValue(\"rating\", index);\r\n                    setRating(index);\r\n                  }}\r\n                  selectedStars={rating}\r\n                />\r\n                <ErrMsg component=\"div\" name=\"rating\" />\r\n              </LabelStyled>\r\n\r\n              <LabelStyled>\r\n                <FieldStyled\r\n                  name=\"comment\"\r\n                  placeholder=\"Comment\"\r\n                  component={TextArea}\r\n                />\r\n                <ErrMsg component=\"div\" name=\"comment\" />\r\n              </LabelStyled>\r\n\r\n              <ButtonSubmit type=\"submit\">Submit</ButtonSubmit>\r\n            </FormReview>\r\n          </>\r\n        )}\r\n      </Formik>\r\n\r\n      <CloseModalButton onClick={onToggleModal} />\r\n    </CustomModalReview>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { IStarRatingComment } from \"../../interfaces/reviewsInterface\";\r\nimport sprite from \"../../images/icons.svg\";\r\nimport { SvgStar } from \"./StarRating.styles\";\r\n\r\nexport const StarRatingComment: FC<IStarRatingComment> = ({\r\n  totalStars,\r\n  selectedStars,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {[...Array(totalStars)].map((_, index) => (\r\n        <SvgStar\r\n          key={index}\r\n          fill={index < selectedStars ? \"#ffc531\" : \"#fbfbfb\"}\r\n        >\r\n          <use href={`${sprite}#star-icon`} />\r\n        </SvgStar>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport Modal from \"react-modal\";\r\nimport { Field, Form, ErrorMessage } from \"formik\";\r\n\r\nexport const CustomModalAppointment = styled(Modal)`\r\n  position: relative;\r\n  border-radius: 30px;\r\n  top: 50%;\r\n  left: 50%;\r\n  border: 1px solid #71736f;\r\n  background-color: #fbfbfb;\r\n  transform: translate(-50%, -50%);\r\n  overflow: auto;\r\n  width: 90%;\r\n  @media only screen and (max-width: 427px) {\r\n    padding: 20px;\r\n  }\r\n  @media only screen and (min-width: 428px) {\r\n    padding: 30px;\r\n  }\r\n  @media only screen and (min-width: 470px) {\r\n    width: 420px;\r\n  }\r\n`;\r\n\r\nexport const TitleAppointmentForm = styled.div`\r\n  font-weight: 500;\r\n  font-size: 26px;\r\n  @media only screen and (min-width: 428px) {\r\n    font-size: 30px;\r\n  }\r\n  line-height: 1.2;\r\n  letter-spacing: -0.02em;\r\n  color: #191a15;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const DescriptionAppointmentForm = styled.p`\r\n  @media only screen and (max-width: 427px) {\r\n    font-size: 12px;\r\n  }\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.25;\r\n  color: rgba(25, 26, 21, 0.5);\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const PsychologistCard = styled.div`\r\n  display: flex;\r\n  gap: 14px;\r\n`;\r\n\r\nexport const PsychologistAvatar = styled.img`\r\n  width: 44px;\r\n  height: 44px;\r\n  border-radius: 15px;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const LabelName = styled.div`\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  color: #8a8a89;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  color: #191a15;\r\n`;\r\n\r\nexport const FormAppointment = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const WrapperField = styled.div`\r\n  position: relative;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const WrapperDateAndTime = styled.div`\r\n  display: flex;\r\n  gap: 14px;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const WrapperDateField = styled.div`\r\n  position: relative;\r\n  .react-datepicker__input-container input {\r\n    border: 1px solid #e9eae9;\r\n    border-radius: 12px;\r\n    padding-left: 12px;\r\n    height: 38px;\r\n    width: 100%;\r\n    &::placeholder {\r\n      font-weight: 400;\r\n      font-size: 16px;\r\n      line-height: 1.25;\r\n      color: #191a15;\r\n    }\r\n  }\r\n  /* .react-datepicker__time-list-item--disabled {\r\n    display: none !important;\r\n  } */\r\n`;\r\n\r\nexport const WrapperTimeField = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const FieldStyled = styled(Field)`\r\n  border: 1px solid #e9eae9;\r\n  border-radius: 12px;\r\n  padding-left: 12px;\r\n  height: 38px;\r\n  width: 100%;\r\n  &::placeholder {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.25;\r\n    color: #191a15;\r\n  }\r\n`;\r\n\r\nexport const TextAreaStyled = styled(Field)`\r\n  display: block;\r\n  min-height: 70px;\r\n  resize: none;\r\n  border: 1px solid #e9eae9;\r\n  border-radius: 12px;\r\n  padding-top: 12px;\r\n  padding-left: 12px;\r\n  width: 100%;\r\n  &::placeholder {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.25;\r\n    color: #191a15;\r\n  }\r\n`;\r\n\r\nexport const ErrMsg = styled(ErrorMessage)`\r\n  font-size: 13px;\r\n  position: absolute;\r\n  bottom: -14px;\r\n  left: 5px;\r\n  color: #eb4c42;\r\n`;\r\n\r\nexport const ButtonSubmit = styled.button`\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n  letter-spacing: -0.01em;\r\n  color: #fbfbfb;\r\n  border-radius: 30px;\r\n  background-color: #54be96;\r\n  border: none;\r\n`;\r\n","import { FC, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { format } from \"date-fns\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { getReservedTimesForDay } from \"../../redux/api\";\r\nimport { setSelectedDate } from \"../../redux/appointments/appointmentsSlice\";\r\n\r\ninterface ISelectDateProps {\r\n  psychologistId: string;\r\n  selected: Date | null;\r\n  setFieldValue: (field: string, value: Date | null) => void;\r\n}\r\n\r\nexport const SelectDate: FC<ISelectDateProps> = ({\r\n  psychologistId,\r\n  selected,\r\n  setFieldValue,\r\n}) => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setFieldValue(\"date\", date);\r\n\r\n    // date && dispatch(setSelectedDate({ date: date.toLocaleString() }));\r\n    date &&\r\n      dispatch(setSelectedDate({ date: format(date, \"yyyy-MM-ddTHH:mm:ss\") }));\r\n    dispatch(getReservedTimesForDay({ psychologistId, date }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setSelectedDate({ date: null }));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const isWeekend = (date: Date) => {\r\n    const day = date.getDay();\r\n    return day === 0 || day === 6;\r\n  };\r\n\r\n  return (\r\n    <DatePicker\r\n      selected={selected}\r\n      onChange={handleDateChange}\r\n      dateFormat=\"dd-MM-yyyy\"\r\n      showMonthDropdown\r\n      highlightDates={[new Date()]}\r\n      placeholderText=\"Date\"\r\n      filterDate={(date) => !isWeekend(date)}\r\n    />\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const SelectTimeStyled = styled.select`\r\n  @media only screen and (max-width: 427px) {\r\n    width: 128px;\r\n  }\r\n  width: 136px;\r\n  border: 1px solid #e9eae9;\r\n  border-radius: 12px;\r\n  padding-left: 12px;\r\n  padding-right: 6px;\r\n  height: 38px;\r\n`;\r\n","import { RootState } from \"../store\";\r\n\r\nexport const reservedTimesSelector = (state: RootState) =>\r\n  state.appointments.reservedTimes;\r\nexport const selectedDateSelector = (state: RootState) =>\r\n  state.appointments.selectedDate;\r\nexport const clientIdSelector = (state: RootState) =>\r\n  state.appointments.clientId;\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  clientIdSelector,\r\n  reservedTimesSelector,\r\n  selectedDateSelector,\r\n} from \"../redux/appointments/appointmentsSelectors\";\r\n\r\nexport const useAppointments = () => {\r\n  const selectedDate = useSelector(selectedDateSelector);\r\n  const reservedTimes = useSelector(reservedTimesSelector);\r\n  const clientId = useSelector(clientIdSelector);\r\n\r\n  return { selectedDate, reservedTimes, clientId };\r\n};\r\n","import { ChangeEvent, FC, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { SelectTimeStyled } from \"./SelectTime.styled\";\r\nimport { useAppointments } from \"../../../hooks/useAppointments\";\r\nimport { AppDispatch } from \"../../../redux/store\";\r\nimport { addReservedTimesForDay } from \"../../../redux/api\";\r\nimport {\r\n  setAddReservedTimesForDay,\r\n  setClientId,\r\n} from \"../../../redux/appointments/appointmentsSlice\";\r\nimport { useSocket } from \"../../../hooks/useSocket\";\r\n\r\ninterface ISelectTimeProps {\r\n  psychologistId: string;\r\n  value: string;\r\n  setFieldValue: (field: string, value: string) => void;\r\n}\r\n\r\nexport const SelectTime: FC<ISelectTimeProps> = ({\r\n  psychologistId,\r\n  value,\r\n  setFieldValue,\r\n}) => {\r\n  const socket = useSocket();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const { selectedDate, reservedTimes, clientId } = useAppointments();\r\n\r\n  const handleTimeChange = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const time = event.target.value;\r\n\r\n    setFieldValue(\"time\", time);\r\n\r\n    const newClientId = clientId || nanoid();\r\n    !clientId && dispatch(setClientId(newClientId));\r\n\r\n    selectedDate &&\r\n      dispatch(\r\n        addReservedTimesForDay({\r\n          psychologistId,\r\n          date: selectedDate,\r\n          time,\r\n          clientId: clientId || newClientId,\r\n        })\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket && selectedDate) {\r\n      socket.on(\"newReservedTime\", (reservedTimes) => {\r\n        dispatch(setAddReservedTimesForDay(reservedTimes));\r\n      });\r\n    }\r\n  }, [dispatch, socket, selectedDate]);\r\n\r\n  return (\r\n    <SelectTimeStyled\r\n      value={value}\r\n      onChange={handleTimeChange}\r\n      disabled={!selectedDate}\r\n    >\r\n      <option value=\"\" disabled>\r\n        Time\r\n      </option>\r\n\r\n      {reservedTimes.map((timeSlot, index) => (\r\n        <option\r\n          key={index}\r\n          value={timeSlot.time}\r\n          disabled={timeSlot.isReserved}\r\n        >\r\n          {timeSlot.time}\r\n        </option>\r\n      ))}\r\n    </SelectTimeStyled>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  ButtonSubmit,\r\n  CustomModalAppointment,\r\n  DescriptionAppointmentForm,\r\n  FieldStyled,\r\n  FormAppointment,\r\n  TitleAppointmentForm,\r\n  ErrMsg,\r\n  PsychologistAvatar,\r\n  PsychologistCard,\r\n  LabelName,\r\n  Name,\r\n  WrapperField,\r\n  WrapperDateField,\r\n  WrapperDateAndTime,\r\n  WrapperTimeField,\r\n} from \"./ModalAppointment.styled\";\r\nimport { IModalAppointmentProps } from \"../../../interfaces/authInterfaces\";\r\nimport { AppDispatch } from \"../../../redux/store\";\r\nimport { AppointmentShema } from \"../../../validationShemas/psychologistShemas\";\r\nimport { IAppointment } from \"../../../interfaces/appointmentsInterface\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { SelectDate } from \"../../DateAndTimePicker/SelectDate\";\r\nimport { SelectTime } from \"../../DateAndTimePicker/SelectTime/SelectTime\";\r\nimport { CloseModalButton } from \"../../CloseModalButton/CloseModalButton\";\r\nimport {\r\n  addAppointmentForNotLoggedInUser,\r\n  appointmentIsComplete,\r\n} from \"../../../redux/api\";\r\nimport { setClientId } from \"../../../redux/appointments/appointmentsSlice\";\r\nimport { useAppointments } from \"../../../hooks/useAppointments\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport const ModalAppointment: FC<IModalAppointmentProps> = ({\r\n  id,\r\n  avatar,\r\n  name,\r\n  isOpenModal,\r\n  onToggleModal,\r\n}) => {\r\n  const { clientId } = useAppointments();\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const handleSubmit = (values: IAppointment) => {\r\n    clientId &&\r\n      dispatch(addAppointmentForNotLoggedInUser({ ...values, clientId }));\r\n    dispatch(setClientId(null));\r\n    onToggleModal();\r\n  };\r\n\r\n  const handleRequestClose = () => {\r\n    clientId && dispatch(appointmentIsComplete({ clientId }));\r\n    dispatch(setClientId(null));\r\n    onToggleModal();\r\n  };\r\n\r\n  const modalStyles = {\r\n    overlay: {\r\n      zIndex: 1000,\r\n    },\r\n    content: {\r\n      zIndex: 1000,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <CustomModalAppointment\r\n      isOpen={isOpenModal}\r\n      onRequestClose={handleRequestClose}\r\n      contentLabel=\"Appointment Modal\"\r\n      style={modalStyles}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          psychologistId: id,\r\n          clientId: \"\",\r\n          client_name: \"\",\r\n          client_phone: \"\",\r\n          client_email: \"\",\r\n          date: null,\r\n          time: \"\",\r\n        }}\r\n        validationSchema={AppointmentShema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ setFieldValue, values }) => (\r\n          <>\r\n            <TitleAppointmentForm>Appointment</TitleAppointmentForm>\r\n            <DescriptionAppointmentForm>\r\n              Fill out the short form below to book your personal appointment\r\n              with a professional psychologist.\r\n            </DescriptionAppointmentForm>\r\n\r\n            <PsychologistCard>\r\n              <PsychologistAvatar src={avatar} alt=\"avatar\" />\r\n              <div>\r\n                <LabelName>Your psychologist</LabelName>\r\n                <Name>{name}</Name>\r\n              </div>\r\n            </PsychologistCard>\r\n\r\n            <FormAppointment>\r\n              <WrapperField>\r\n                <FieldStyled name=\"client_name\" placeholder=\"Name\" />\r\n                <ErrMsg component=\"div\" name=\"client_name\" />\r\n              </WrapperField>\r\n\r\n              <WrapperField>\r\n                <FieldStyled name=\"client_phone\" placeholder=\"Phone\" />\r\n                <ErrMsg component=\"div\" name=\"client_phone\" />\r\n              </WrapperField>\r\n\r\n              <WrapperField>\r\n                <FieldStyled\r\n                  name=\"client_email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <ErrMsg component=\"div\" name=\"client_email\" />\r\n              </WrapperField>\r\n\r\n              {/* <WrapperField>\r\n                <TextAreaStyled\r\n                  name=\"comment\"\r\n                  placeholder=\"Comment\"\r\n                  component={TextArea}\r\n                />\r\n                <ErrMsg component=\"div\" name=\"comment\" />\r\n              </WrapperField> */}\r\n\r\n              <WrapperDateAndTime>\r\n                <WrapperDateField>\r\n                  <SelectDate\r\n                    psychologistId={id}\r\n                    selected={values.date}\r\n                    setFieldValue={setFieldValue}\r\n                  />\r\n                  <ErrMsg component=\"div\" name=\"date\" />\r\n                </WrapperDateField>\r\n\r\n                <WrapperTimeField>\r\n                  <SelectTime\r\n                    psychologistId={id}\r\n                    value={values.time}\r\n                    setFieldValue={setFieldValue}\r\n                  />\r\n                  <ErrMsg component=\"div\" name=\"time\" />\r\n                </WrapperTimeField>\r\n              </WrapperDateAndTime>\r\n\r\n              <ButtonSubmit type=\"submit\">Send</ButtonSubmit>\r\n            </FormAppointment>\r\n          </>\r\n        )}\r\n      </Formik>\r\n\r\n      <CloseModalButton onClick={handleRequestClose} />\r\n    </CustomModalAppointment>\r\n  );\r\n};\r\n","import { FC, MouseEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { format } from \"date-fns\";\r\nimport toast from \"react-hot-toast\";\r\nimport {\r\n  Img,\r\n  ImgCard,\r\n  Profession,\r\n  Rating,\r\n  Delimiter,\r\n  Price,\r\n  PriceAccent,\r\n  ButtonSvg,\r\n  RatingPriceFavoriteWrapper,\r\n  SvgHeart,\r\n  Title,\r\n  List,\r\n  ListItem,\r\n  ListItemAccent,\r\n  About,\r\n  SvgStar,\r\n  ReviewList,\r\n  ReviewerAvatar,\r\n  ReviewerCard,\r\n  ReviewerName,\r\n  ReviewerComment,\r\n  ButtonAction,\r\n  InfoWrapper,\r\n  RatingPriceWrapper,\r\n  ButtonWrapper,\r\n  NotFoundMessage,\r\n  ReviewerDate,\r\n} from \"./PsychologistListCard.styled\";\r\nimport sprite from \"../../images/icons.svg\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { AppDispatch } from \"../../redux/store.ts\";\r\nimport {\r\n  updatePsychologistsCardFavoriteLoggedIn,\r\n  updatePsychologistsCardLoggedIn,\r\n} from \"../../redux/api.ts\";\r\nimport { usePsychologists } from \"../../hooks/usePsychologists.ts\";\r\nimport { setClearFavoriteItem } from \"../../redux/psychologists/psychologistsSlice.ts\";\r\nimport { IItemProps } from \"../../interfaces/psychologistsInterfaces.ts\";\r\nimport { ModalReview } from \"../Modal/ModalReview/ModalReview.tsx\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { StarRatingComment } from \"../StarRating/StarRatingComment.tsx\";\r\nimport { ModalAppointment } from \"../Modal/ModalAppointment/ModalAppointment.tsx\";\r\n\r\nexport const PsychologistListCard: FC<IItemProps> = ({ item }) => {\r\n  const [isOpenReviewModal, setIsOpenReviewModal] = useState<boolean>(false);\r\n  const [isOpenModalAppointment, setIsOpenModalAppointment] =\r\n    useState<boolean>(false);\r\n  const { favoriteItems } = usePsychologists();\r\n  const { isLoggedIn } = useAuth();\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const location = useLocation();\r\n\r\n  const toggleAppointmentModal = () => {\r\n    setIsOpenModalAppointment((prevState: boolean) => !prevState);\r\n  };\r\n\r\n  const toggleReviewModal = () => {\r\n    setIsOpenReviewModal((prevState: boolean) => !prevState);\r\n  };\r\n\r\n  const handleClickAppointment = (event: MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation();\r\n    toggleAppointmentModal();\r\n  };\r\n\r\n  const handleClickReview = (event: MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation();\r\n    toggleReviewModal();\r\n  };\r\n\r\n  const handleSvgClick = (event: MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation();\r\n    if (!isLoggedIn) {\r\n      toast.error(\"This functionality is available only for authorized users!\");\r\n      return;\r\n    }\r\n    if (favoriteItems.length > 0) {\r\n      dispatch(setClearFavoriteItem());\r\n      dispatch(updatePsychologistsCardFavoriteLoggedIn({ id: item._id }));\r\n    } else {\r\n      dispatch(updatePsychologistsCardLoggedIn({ id: item._id }));\r\n    }\r\n  };\r\n\r\n  const isCurrentPsychologistPage =\r\n    location.pathname === `/psychologist/${item._id}`;\r\n\r\n  const messageForLoggedInUsers =\r\n    \"There are no comments yet. Be the first to share your thoughts!\";\r\n\r\n  const messageForNotLoggedInUsers =\r\n    \"There are no comments yet. To leave a comment, please log in!\";\r\n\r\n  return (\r\n    <>\r\n      <InfoWrapper>\r\n        <ImgCard>\r\n          <Img src={item.avatar_url} alt=\"avatar\" />\r\n        </ImgCard>\r\n        <div>\r\n          <Profession>Psychologist</Profession>\r\n          <Title>{item.name}</Title>\r\n        </div>\r\n      </InfoWrapper>\r\n\r\n      <RatingPriceFavoriteWrapper>\r\n        <RatingPriceWrapper>\r\n          <SvgStar width={16} height={16} $isFilled={item.rating > 0}>\r\n            <use href={`${sprite}#star-icon`} />\r\n          </SvgStar>\r\n          <Rating>Rating: {item.rating}</Rating>\r\n          <Delimiter>|</Delimiter>\r\n          <Price>\r\n            Price / 1 hour: <PriceAccent>{item.price_per_hour}$</PriceAccent>\r\n          </Price>\r\n        </RatingPriceWrapper>\r\n        <ButtonSvg onClick={handleSvgClick}>\r\n          <SvgHeart $owner={item.owner} width={23} height={20}>\r\n            <use href={`${sprite}#heart-icon`} />\r\n          </SvgHeart>\r\n        </ButtonSvg>\r\n      </RatingPriceFavoriteWrapper>\r\n\r\n      <List>\r\n        <ListItem>\r\n          Experience: <ListItemAccent>{item.experience}</ListItemAccent>\r\n        </ListItem>\r\n        <ListItem>\r\n          License: <ListItemAccent>{item.license}</ListItemAccent>\r\n        </ListItem>\r\n        <ListItem>\r\n          Specialization: <ListItemAccent>{item.specialization}</ListItemAccent>\r\n        </ListItem>\r\n        <ListItem>\r\n          Initial_consultation:{\" \"}\r\n          <ListItemAccent>{item.initial_consultation}</ListItemAccent>\r\n        </ListItem>\r\n      </List>\r\n\r\n      {isCurrentPsychologistPage && <About>{item.about}</About>}\r\n      {!isCurrentPsychologistPage && (\r\n        <About>{item.about.slice(0, 200)} ...</About>\r\n      )}\r\n\r\n      {isCurrentPsychologistPage && (\r\n        <ButtonWrapper>\r\n          <ButtonAction onClick={handleClickAppointment}>\r\n            Make an appointment\r\n          </ButtonAction>\r\n          {isLoggedIn && (\r\n            <ButtonAction onClick={handleClickReview}>\r\n              Leave a Review\r\n            </ButtonAction>\r\n          )}\r\n        </ButtonWrapper>\r\n      )}\r\n\r\n      {isCurrentPsychologistPage &&\r\n        item?.reviews &&\r\n        item.reviews.length > 0 && (\r\n          <ReviewList>\r\n            {item.reviews\r\n              .map((review) => (\r\n                <li key={review._id}>\r\n                  <ReviewerCard>\r\n                    <ReviewerAvatar>\r\n                      {review.reviewer.slice(0, 1)}\r\n                    </ReviewerAvatar>\r\n                    <div>\r\n                      <ReviewerDate>\r\n                        {format(new Date(review.date), \"dd.MM.yyyy\")}\r\n                      </ReviewerDate>\r\n                      <ReviewerName>{review.reviewer}</ReviewerName>\r\n                      <StarRatingComment\r\n                        totalStars={5}\r\n                        selectedStars={review.rating}\r\n                      />\r\n                    </div>\r\n                  </ReviewerCard>\r\n                  <ReviewerComment>{review.comment}</ReviewerComment>\r\n                </li>\r\n              ))\r\n              .reverse()}\r\n          </ReviewList>\r\n        )}\r\n\r\n      {isCurrentPsychologistPage &&\r\n        item?.reviews &&\r\n        item.reviews.length === 0 && (\r\n          <NotFoundMessage>\r\n            {isLoggedIn ? messageForLoggedInUsers : messageForNotLoggedInUsers}\r\n          </NotFoundMessage>\r\n        )}\r\n\r\n      <ModalAppointment\r\n        id={item._id}\r\n        avatar={item.avatar_url}\r\n        name={item.name}\r\n        isOpenModal={isOpenModalAppointment}\r\n        onToggleModal={toggleAppointmentModal}\r\n      />\r\n\r\n      <ModalReview\r\n        id={item._id}\r\n        isOpenModal={isOpenReviewModal}\r\n        onToggleModal={toggleReviewModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { RootState } from \"../store\";\r\n\r\nexport const itemsSelector = (state: RootState) => state.psychologists.items;\r\nexport const oneItemSelector = (state: RootState) =>\r\n  state.psychologists.oneItem;\r\nexport const favoriteItemsSelector = (state: RootState) =>\r\n  state.psychologists.favoriteItems;\r\nexport const clearFavoriteItemSelector = (state: RootState) =>\r\n  state.psychologists.clearFavoriteItem;\r\nexport const filterSelector = (state: RootState) => state.psychologists.filter;\r\nexport const pagesQuantitySelector = (state: RootState) =>\r\n  state.psychologists.pagesQuantity;\r\nexport const pagesFavoriteQuantitySelector = (state: RootState) =>\r\n  state.psychologists.pagesQuantity;\r\nexport const pageSelector = (state: RootState) => state.psychologists.page;\r\nexport const pageFavoriteSelector = (state: RootState) =>\r\n  state.psychologists.pageFavorite;\r\nexport const loadingSelector = (state: RootState) =>\r\n  state.psychologists.loading;\r\nexport const errorSelector = (state: RootState) => state.psychologists.error;\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  errorSelector,\r\n  loadingSelector,\r\n  favoriteItemsSelector,\r\n  itemsSelector,\r\n  pageFavoriteSelector,\r\n  pageSelector,\r\n  pagesQuantitySelector,\r\n  pagesFavoriteQuantitySelector,\r\n  clearFavoriteItemSelector,\r\n  filterSelector,\r\n  oneItemSelector,\r\n} from \"../redux/psychologists/psychologistsSelecrors\";\r\n\r\nexport const usePsychologists = () => {\r\n  const items = useSelector(itemsSelector);\r\n  const oneItem = useSelector(oneItemSelector);\r\n  const favoriteItems = useSelector(favoriteItemsSelector);\r\n  const clearFavoriteItem = useSelector(clearFavoriteItemSelector);\r\n  const filter = useSelector(filterSelector);\r\n  const pagesQuantity = useSelector(pagesQuantitySelector);\r\n  const pagesFavoriteQuantity = useSelector(pagesFavoriteQuantitySelector);\r\n  const page = useSelector(pageSelector);\r\n  const pageFavorite = useSelector(pageFavoriteSelector);\r\n  const loading = useSelector(loadingSelector);\r\n  const error = useSelector(errorSelector);\r\n\r\n  return {\r\n    items,\r\n    oneItem,\r\n    favoriteItems,\r\n    clearFavoriteItem,\r\n    filter,\r\n    pagesQuantity,\r\n    pagesFavoriteQuantity,\r\n    page,\r\n    pageFavorite,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport io, { Socket } from \"socket.io-client\";\r\n\r\nconst { REACT_APP_BASE_URL } = process.env;\r\n\r\nexport const useSocket = () => {\r\n  const [socket, setSocket] = useState<Socket | null>(null);\r\n\r\n  useEffect(() => {\r\n    const socketInstance = io(REACT_APP_BASE_URL);\r\n    setSocket(socketInstance);\r\n\r\n    return () => {\r\n      socketInstance.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return socket;\r\n};\r\n"],"names":["ClipLoaderContainer","styled","div","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","ClipLoader","color","InfoWrapper","ImgCard","_templateObject2","Img","img","_templateObject3","Profession","_templateObject4","RatingPriceFavoriteWrapper","_templateObject5","RatingPriceWrapper","_templateObject6","SvgStar","svg","_templateObject7","_ref","$isFilled","Delimiter","span","_templateObject8","Rating","_templateObject9","Price","_templateObject10","PriceAccent","_templateObject11","ButtonSvg","button","_templateObject12","SvgHeart","_templateObject13","_ref2","$owner","undefined","length","_ref3","Title","_templateObject14","List","ul","_templateObject15","ListItem","li","_templateObject16","ListItemAccent","_templateObject17","About","p","_templateObject18","ButtonWrapper","_templateObject19","ButtonAction","_templateObject20","ReviewList","_templateObject21","ReviewerCard","_templateObject22","ReviewerAvatar","_templateObject23","ReviewerDate","_templateObject24","ReviewerName","_templateObject25","ReviewerComment","_templateObject26","NotFoundMessage","_templateObject27","CustomModalReview","Modal","TitleReviewForm","DescriptionReviewForm","FormReview","Form","LabelStyled","label","FieldStyled","Field","ErrMsg","ErrorMessage","ButtonSubmit","ReviewShema","Yup","shape","rating","required","test","value","comment","AppointmentShema","client_name","client_phone","client_email","matches","date","time","StarRatingModal","totalStars","onStarClick","selectedStars","Array","map","_","index","onClick","fill","href","concat","sprite","TextArea","field","form","props","ModalReview","id","isOpenModal","onToggleModal","setRating","useState","dispatch","useDispatch","useEffect","_jsxs","isOpen","onRequestClose","contentLabel","style","overlay","zIndex","content","Formik","initialValues","validationSchema","onSubmit","values","addReviewForLoggedInUser","setFieldValue","_Fragment","component","name","placeholder","type","CloseModalButton","StarRatingComment","CustomModalAppointment","TitleAppointmentForm","DescriptionAppointmentForm","PsychologistCard","PsychologistAvatar","LabelName","Name","FormAppointment","WrapperField","WrapperDateAndTime","WrapperDateField","WrapperTimeField","SelectDate","psychologistId","selected","setSelectedDate","DatePicker","onChange","format","getReservedTimesForDay","dateFormat","showMonthDropdown","highlightDates","Date","placeholderText","filterDate","day","getDay","isWeekend","SelectTimeStyled","select","reservedTimesSelector","state","appointments","reservedTimes","selectedDateSelector","selectedDate","clientIdSelector","clientId","useAppointments","useSelector","SelectTime","socket","useSocket","on","setAddReservedTimesForDay","event","target","newClientId","nanoid","setClientId","addReservedTimesForDay","disabled","timeSlot","isReserved","ModalAppointment","avatar","handleRequestClose","appointmentIsComplete","addAppointmentForNotLoggedInUser","src","alt","PsychologistListCard","item","isOpenReviewModal","setIsOpenReviewModal","isOpenModalAppointment","setIsOpenModalAppointment","favoriteItems","usePsychologists","isLoggedIn","useAuth","location","useLocation","toggleAppointmentModal","prevState","toggleReviewModal","isCurrentPsychologistPage","pathname","_id","avatar_url","width","height","price_per_hour","stopPropagation","setClearFavoriteItem","updatePsychologistsCardFavoriteLoggedIn","updatePsychologistsCardLoggedIn","toast","error","owner","experience","license","specialization","initial_consultation","about","slice","reviews","review","reviewer","reverse","itemsSelector","psychologists","items","oneItemSelector","oneItem","favoriteItemsSelector","clearFavoriteItemSelector","clearFavoriteItem","filterSelector","filter","pagesQuantitySelector","pagesQuantity","pagesFavoriteQuantitySelector","pageSelector","page","pageFavoriteSelector","pageFavorite","loadingSelector","loading","errorSelector","pagesFavoriteQuantity","REACT_APP_BASE_URL","process","setSocket","socketInstance","io","disconnect"],"sourceRoot":""}