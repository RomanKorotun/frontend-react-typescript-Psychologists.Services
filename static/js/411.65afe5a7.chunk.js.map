{"version":3,"file":"static/js/411.65afe5a7.chunk.js","mappings":"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","sources":["components/Filters/Filters.styled.js","helpers/filterOptions.ts","components/Filters/Filters.tsx","helpers/getFilterKeyValue.ts","components/Loader/Loader.styled.js","components/Loader/Loader.tsx","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.tsx","components/PsychologistListCard/PsychologistListCard.styled.ts","components/PsychologistListCard/PsychologistListCard.tsx","components/PsychologistList/PsychologistList.styled.js","components/PsychologistList/PsychologistList.tsx","hooks/useFilters.ts","redux/psychologists/psychologistsSelecrors.ts","hooks/usePsychologists.ts","hooks/useQueryParams.ts","page/PsychologistsFavoritePage.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FiltersWrapper = styled.div`\r\n  margin-bottom: 26px;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 129%;\r\n  color: #8a8a89;\r\n  margin-bottom: 8px;\r\n`;\r\n","export const filterOptions = [\r\n  \"Default\",\r\n  \"A to Z\",\r\n  \"Z to A\",\r\n  \"From expensive to cheap \",\r\n  \"From cheap to expensive\",\r\n  \"From most popular\",\r\n  \"From least popular\",\r\n];\r\n","import { FC, KeyboardEvent, SyntheticEvent } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Autocomplete as MuiAutocomplete,\r\n  TextField as MuiTextField,\r\n} from \"@mui/material\";\r\nimport { FiltersWrapper, Title } from \"./Filters.styled\";\r\nimport { filterOptions } from \"../../helpers/filterOptions\";\r\nimport styled from \"styled-components\";\r\nimport { useFilters } from \"../../hooks/useFilters\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport {\r\n  setFilter,\r\n  setPage,\r\n  setPageFavorite,\r\n} from \"../../redux/psychologists/psychologistsSlice\";\r\nimport { usePsychologists } from \"../../hooks/usePsychologists\";\r\nimport { getFilterKeyValue } from \"../../helpers/getFilterKeyValue\";\r\n\r\nconst Autocomplete = styled(MuiAutocomplete<string, false, false>)({\r\n  width: \"290px\",\r\n  \".MuiOutlinedInput-root\": {\r\n    padding: \"16px !important\",\r\n    borderRadius: \"14px\",\r\n  },\r\n});\r\n\r\nconst TextField = styled(MuiTextField)({\r\n  \"& .MuiInputBase-input\": {\r\n    cursor: \"pointer\",\r\n    padding: \"0 !important\",\r\n  },\r\n});\r\n\r\nexport const Filters: FC = () => {\r\n  const { filter } = usePsychologists();\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const { changeFilterUrl } = useFilters();\r\n\r\n  const handleChange = (_: SyntheticEvent, newValue: string | null) => {\r\n    const { key, value } = getFilterKeyValue(newValue);\r\n    dispatch(setPage({ page: 1 }));\r\n    dispatch(setPageFavorite({ page: 1 }));\r\n    dispatch(setFilter({ filter: newValue }));\r\n    changeFilterUrl(key, value);\r\n  };\r\n\r\n  const handleKeyDown = (event: KeyboardEvent<HTMLDivElement>) => {\r\n    if (\r\n      event.key !== \"ArrowDown\" &&\r\n      event.key !== \"ArrowUp\" &&\r\n      event.key !== \"Enter\"\r\n    ) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FiltersWrapper>\r\n      <Title>Filters</Title>\r\n      <Autocomplete\r\n        options={filterOptions}\r\n        getOptionLabel={(option: string) => option}\r\n        renderInput={(params) => <TextField {...params} />}\r\n        value={filter}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        clearIcon={null}\r\n      />\r\n    </FiltersWrapper>\r\n  );\r\n};\r\n","import { filterOptions } from \"./filterOptions\";\r\n\r\nexport const getFilterKeyValue = (newValue: string | null) => {\r\n  switch (newValue) {\r\n    case filterOptions[0]:\r\n      return { key: \"standard\", value: \"all\" };\r\n    case filterOptions[1]:\r\n      return { key: \"name\", value: \"desc\" };\r\n    case filterOptions[2]:\r\n      return { key: \"name\", value: \"asc\" };\r\n    case filterOptions[3]:\r\n      return { key: \"price\", value: \"desc\" };\r\n    case filterOptions[4]:\r\n      return { key: \"price\", value: \"asc\" };\r\n    case filterOptions[5]:\r\n      return { key: \"popular\", value: \"desc\" };\r\n    case filterOptions[6]:\r\n      return { key: \"popular\", value: \"asc\" };\r\n    default:\r\n      return { key: \"\", value: \"\" };\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ClipLoaderContainer = styled.div`\r\n  width: 35px;\r\n  height: 35px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import { FC } from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { ClipLoaderContainer } from \"./Loader.styled\";\r\n\r\nexport const Loader: FC = () => {\r\n  return (\r\n    <ClipLoaderContainer>\r\n      <ClipLoader color=\"#26ca20\" />\r\n    </ClipLoaderContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport const CustomStack = styled(Stack)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import { ChangeEvent, FC } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { usePsychologists } from \"../../hooks/usePsychologists\";\r\nimport { CustomStack } from \"./Pagination.styled\";\r\nimport {\r\n  setPage,\r\n  setPageFavorite,\r\n} from \"../../redux/psychologists/psychologistsSlice\";\r\n\r\nexport const PaginationButtons: FC = () => {\r\n  const { isLoggedIn } = useAuth();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const {\r\n    pagesQuantity,\r\n    pagesFavoriteQuantity,\r\n    favoriteItems,\r\n    page,\r\n    pageFavorite,\r\n  } = usePsychologists();\r\n\r\n  const handleChange = (_: ChangeEvent<unknown>, page: number) => {\r\n    if (isLoggedIn && favoriteItems.length > 0) {\r\n      dispatch(setPageFavorite({ page }));\r\n    } else {\r\n      dispatch(setPage({ page }));\r\n    }\r\n  };\r\n\r\n  const count =\r\n    pagesQuantity > 1\r\n      ? pagesQuantity\r\n      : pageFavorite > 1\r\n      ? pagesFavoriteQuantity\r\n      : 1;\r\n\r\n  const currentPage = page > 1 ? page : pageFavorite > 1 ? pageFavorite : 1;\r\n\r\n  return (\r\n    <CustomStack>\r\n      <Pagination\r\n        count={count}\r\n        page={currentPage}\r\n        onChange={handleChange}\r\n        showFirstButton\r\n        showLastButton\r\n      />\r\n    </CustomStack>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const InfoWrapper = styled.div`\r\n  @media screen and (max-width: 929px) {\r\n    margin-bottom: 20px;\r\n  }\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ImgCard = styled.div`\r\n  @media screen and (min-width: 930px) {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 20px;\r\n  }\r\n  display: inline-block;\r\n  border-radius: 30px;\r\n  border: 1px solid #deeee7;\r\n  padding: 12px;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 96px;\r\n  height: 96px;\r\n  border-radius: 15px;\r\n`;\r\n\r\nexport const Profession = styled.div`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: #8a8a89;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nexport const RatingPriceFavoriteWrapper = styled.div`\r\n  @media screen and (max-width: 699px) {\r\n    left: 20px;\r\n  }\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const RatingPriceWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SvgStar = styled.svg`\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const Delimiter = styled.span`\r\n  color: #cececd;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const Rating = styled.span`\r\n  @media screen and (max-width: 380px) {\r\n    font-size: 12px;\r\n  }\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  color: #191a15;\r\n`;\r\n\r\nexport const Price = styled.span`\r\n  @media screen and (max-width: 380px) {\r\n    font-size: 12px;\r\n  }\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  color: #191a15;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const PriceAccent = styled.span`\r\n  color: #38cd3e;\r\n`;\r\n\r\nexport const ButtonSvg = styled.button`\r\n  padding: 0;\r\n  height: 20px;\r\n  background-color: transparent;\r\n  border: none;\r\n`;\r\n\r\ninterface MySvgHeartProps {\r\n  $owner: string[] | undefined;\r\n}\r\n\r\nexport const SvgHeart = styled.svg<MySvgHeartProps>`\r\n  fill: ${({ $owner }) => {\r\n    if ($owner === undefined || $owner.length === 0) {\r\n      return \"none\";\r\n    } else {\r\n      return \"#54be96;\";\r\n    }\r\n  }};\r\n  stroke: ${({ $owner }) => {\r\n    if ($owner === undefined || $owner.length === 0) {\r\n      return \"#181914\";\r\n    } else {\r\n      return \"#54be96\";\r\n    }\r\n  }};\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  color: #191a15;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  max-width: 840px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n  column-gap: 4px;\r\n  row-gap: 8px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  background-color: #f3f3f3;\r\n  border-radius: 24px;\r\n  padding: 8px 16px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: #8a8a89;\r\n`;\r\n\r\nexport const ListItemAccent = styled.span`\r\n  color: #191a15;\r\n`;\r\n\r\nexport const About = styled.p`\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n  color: #8a8b88;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const ReviewList = styled.ul`\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n`;\r\n\r\nexport const ReviewerCard = styled.div`\r\n  display: flex;\r\n  gap: 12px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const ReviewerAvatar = styled.div`\r\n  width: 44px;\r\n  height: 44px;\r\n  border-radius: 50%;\r\n  background-color: #deeee7;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  color: #54be96;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ReviewerName = styled.div`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n  color: #191a15;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nexport const RatingCard = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n`;\r\n\r\nexport const ReviewerComment = styled.p`\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n  color: #8a8b88;\r\n`;\r\n\r\nexport const ButtonMakeAppointment = styled.button`\r\n  border-radius: 30px;\r\n  padding: 14px 32px;\r\n  background-color: #54be96;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n  letter-spacing: -0.01em;\r\n  color: #fbfbfb;\r\n  border: none;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const ButtonReadMore = styled.button`\r\n  display: block;\r\n  position: relative;\r\n  border: none;\r\n  background-color: transparent;\r\n  padding: 0;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: #191a15;\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: #191a15;\r\n  }\r\n`;\r\n","import { FC, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport toast from \"react-hot-toast\";\r\nimport {\r\n  Img,\r\n  ImgCard,\r\n  Profession,\r\n  Rating,\r\n  Delimiter,\r\n  Price,\r\n  PriceAccent,\r\n  ButtonSvg,\r\n  RatingPriceFavoriteWrapper,\r\n  SvgHeart,\r\n  Title,\r\n  List,\r\n  ListItem,\r\n  ListItemAccent,\r\n  About,\r\n  ButtonReadMore,\r\n  SvgStar,\r\n  ReviewList,\r\n  ReviewerAvatar,\r\n  ReviewerCard,\r\n  ReviewerName,\r\n  RatingCard,\r\n  ReviewerComment,\r\n  ButtonMakeAppointment,\r\n  InfoWrapper,\r\n  RatingPriceWrapper,\r\n} from \"./PsychologistListCard.styled\";\r\nimport sprite from \"../../images/icons.svg\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { AppDispatch } from \"../../redux/store.ts\";\r\nimport {\r\n  updatePsychologistsCardFavoriteLoggedIn,\r\n  updatePsychologistsCardLoggedIn,\r\n} from \"../../redux/api.ts\";\r\nimport { usePsychologists } from \"../../hooks/usePsychologists.ts\";\r\nimport { setClearFavoriteItem } from \"../../redux/psychologists/psychologistsSlice.ts\";\r\nimport { IItemProps } from \"../../interfaces/psychologistsInterfaces.ts\";\r\n\r\nexport const PsychologistListCard: FC<IItemProps> = ({ item }) => {\r\n  const { favoriteItems } = usePsychologists();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const [showMore, setShowMore] = useState<boolean>(true);\r\n  const { isLoggedIn } = useAuth();\r\n\r\n  const handleSvgClick = () => {\r\n    if (!isLoggedIn) {\r\n      toast.error(\"This functionality is available only for authorized users!\");\r\n      return;\r\n    }\r\n    if (favoriteItems.length > 0) {\r\n      dispatch(setClearFavoriteItem());\r\n      dispatch(updatePsychologistsCardFavoriteLoggedIn({ id: item._id }));\r\n    } else {\r\n      dispatch(updatePsychologistsCardLoggedIn({ id: item._id }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InfoWrapper>\r\n        <ImgCard>\r\n          <Img src={item.avatar_url} alt=\"avatar\" />\r\n        </ImgCard>\r\n        <div>\r\n          <Profession>Psychologist</Profession>\r\n          <Title>{item.name}</Title>\r\n        </div>\r\n      </InfoWrapper>\r\n      <RatingPriceFavoriteWrapper>\r\n        <RatingPriceWrapper>\r\n          <SvgStar width={16} height={16}>\r\n            <use href={`${sprite}#star-icon`} />\r\n          </SvgStar>\r\n          <Rating>Rating: {item.rating}</Rating>\r\n          <Delimiter>|</Delimiter>\r\n          <Price>\r\n            Price / 1 hour: <PriceAccent>{item.price_per_hour}$</PriceAccent>\r\n          </Price>\r\n        </RatingPriceWrapper>\r\n        <ButtonSvg onClick={handleSvgClick}>\r\n          <SvgHeart $owner={item.owner} width={23} height={20}>\r\n            <use href={`${sprite}#heart-icon`} />\r\n          </SvgHeart>\r\n        </ButtonSvg>\r\n      </RatingPriceFavoriteWrapper>\r\n      <List>\r\n        <ListItem>\r\n          Experience: <ListItemAccent>{item.experience}</ListItemAccent>\r\n        </ListItem>\r\n        <ListItem>\r\n          License: <ListItemAccent>{item.license}</ListItemAccent>\r\n        </ListItem>\r\n        <ListItem>\r\n          Specialization: <ListItemAccent>{item.specialization}</ListItemAccent>\r\n        </ListItem>\r\n        <ListItem>\r\n          Initial_consultation:{\" \"}\r\n          <ListItemAccent>{item.initial_consultation}</ListItemAccent>\r\n        </ListItem>\r\n      </List>\r\n      <About>{item.about}</About>\r\n      {!showMore && (\r\n        <>\r\n          <ReviewList>\r\n            {item.reviews.map((review) => (\r\n              <li key={review._id}>\r\n                <ReviewerCard>\r\n                  <ReviewerAvatar>{review.reviewer.slice(0, 1)}</ReviewerAvatar>\r\n                  <div>\r\n                    <ReviewerName>{review.reviewer}</ReviewerName>\r\n                    <RatingCard>\r\n                      <svg width={16} height={16}>\r\n                        <use href={`${sprite}#star-icon`} />\r\n                      </svg>\r\n                      <span>{review.rating}</span>\r\n                    </RatingCard>\r\n                  </div>\r\n                </ReviewerCard>\r\n                <ReviewerComment>{review.comment}</ReviewerComment>\r\n              </li>\r\n            ))}\r\n          </ReviewList>\r\n          <ButtonMakeAppointment>Make an appointment</ButtonMakeAppointment>\r\n        </>\r\n      )}\r\n\r\n      <ButtonReadMore onClick={() => setShowMore((prevState) => !prevState)}>\r\n        {showMore ? \"Show more\" : \"Show less\"}\r\n      </ButtonReadMore>\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  @media screen and (max-width: 350px) {\r\n    padding-right: 10px;\r\n    padding-left: 10px;\r\n  }\r\n  position: relative;\r\n  background-color: #fbfbfb;\r\n  border-radius: 20px;\r\n  padding-top: 20px;\r\n  padding-right: 20px;\r\n  padding-bottom: 20px;\r\n  padding-left: 20px;\r\n  @media screen and (max-width: 699px) {\r\n    padding-top: 60px;\r\n  }\r\n  @media screen and (min-width: 930px) {\r\n    padding-left: 160px;\r\n  }\r\n  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.2);\r\n  &:not(:last-of-type) {\r\n    margin-bottom: 32px;\r\n  }\r\n`;\r\n","import { FC } from \"react\";\r\nimport { PsychologistListCard } from \"../PsychologistListCard/PsychologistListCard\";\r\nimport { List, ListItem } from \"./PsychologistList.styled\";\r\nimport { IPsychologistListProps } from \"../../interfaces/psychologistsInterfaces\";\r\n\r\nexport const PsychologistList: FC<IPsychologistListProps> = ({ items }) => {\r\n  return (\r\n    <List>\r\n      {items.map((item) => (\r\n        <ListItem key={item._id}>\r\n          <PsychologistListCard item={item} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n","import { useSearchParams } from \"react-router-dom\";\r\n\r\nexport const useFilters = () => {\r\n  const [params, setParams] = useSearchParams();\r\n  const standard = params.get(\"standard\");\r\n  const name = params.get(\"name\");\r\n  const price = params.get(\"price\");\r\n  const popular = params.get(\"popular\");\r\n\r\n  const changeFilterUrl = (key: string, value: string) => {\r\n    params.delete(\"standard\");\r\n    params.delete(\"name\");\r\n    params.delete(\"price\");\r\n    params.delete(\"popular\");\r\n    if (value) {\r\n      params.set(key, value);\r\n    }\r\n    setParams(params);\r\n  };\r\n\r\n  const resetFilterUrl = () => {\r\n    params.delete(\"standard\");\r\n    params.delete(\"name\");\r\n    params.delete(\"price\");\r\n    params.delete(\"popular\");\r\n    setParams(params);\r\n  };\r\n\r\n  return { standard, name, price, popular, changeFilterUrl, resetFilterUrl };\r\n};\r\n","import { RootState } from \"../store\";\r\n\r\nexport const itemsSelector = (state: RootState) => state.psychologists.items;\r\nexport const favoriteItemsSelector = (state: RootState) =>\r\n  state.psychologists.favoriteItems;\r\nexport const clearFavoriteItemSelector = (state: RootState) =>\r\n  state.psychologists.clearFavoriteItem;\r\nexport const filterSelector = (state: RootState) => state.psychologists.filter;\r\nexport const pagesQuantitySelector = (state: RootState) =>\r\n  state.psychologists.pagesQuantity;\r\nexport const pagesFavoriteQuantitySelector = (state: RootState) =>\r\n  state.psychologists.pagesQuantity;\r\nexport const pageSelector = (state: RootState) => state.psychologists.page;\r\nexport const pageFavoriteSelector = (state: RootState) =>\r\n  state.psychologists.pageFavorite;\r\nexport const loadingSelector = (state: RootState) =>\r\n  state.psychologists.loading;\r\nexport const errorSelector = (state: RootState) => state.psychologists.error;\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  errorSelector,\r\n  loadingSelector,\r\n  favoriteItemsSelector,\r\n  itemsSelector,\r\n  pageFavoriteSelector,\r\n  pageSelector,\r\n  pagesQuantitySelector,\r\n  pagesFavoriteQuantitySelector,\r\n  clearFavoriteItemSelector,\r\n  filterSelector,\r\n} from \"../redux/psychologists/psychologistsSelecrors\";\r\n\r\nexport const usePsychologists = () => {\r\n  const items = useSelector(itemsSelector);\r\n  const favoriteItems = useSelector(favoriteItemsSelector);\r\n  const clearFavoriteItem = useSelector(clearFavoriteItemSelector);\r\n  const filter = useSelector(filterSelector);\r\n  const pagesQuantity = useSelector(pagesQuantitySelector);\r\n  const pagesFavoriteQuantity = useSelector(pagesFavoriteQuantitySelector);\r\n  const page = useSelector(pageSelector);\r\n  const pageFavorite = useSelector(pageFavoriteSelector);\r\n  const loading = useSelector(loadingSelector);\r\n  const error = useSelector(errorSelector);\r\n\r\n  return {\r\n    items,\r\n    favoriteItems,\r\n    clearFavoriteItem,\r\n    filter,\r\n    pagesQuantity,\r\n    pagesFavoriteQuantity,\r\n    page,\r\n    pageFavorite,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n","import { useMemo } from \"react\";\r\n\r\nexport const useQueryParams = (\r\n  standard: string | null,\r\n  name: string | null,\r\n  price: string | null,\r\n  popular: string | null\r\n) => {\r\n  return useMemo(() => {\r\n    const newParams: URLSearchParams = new URLSearchParams();\r\n    standard && newParams.set(\"standard\", standard);\r\n    name && newParams.set(\"name\", name);\r\n    price && newParams.set(\"price\", price);\r\n    popular && newParams.set(\"popular\", popular);\r\n    return newParams.toString();\r\n  }, [standard, name, price, popular]);\r\n};\r\n","import { FC, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"../redux/store\";\r\nimport { psychologistsFavorite } from \"../redux/api\";\r\nimport { Container, Section } from \"../GlobaStyles\";\r\nimport { PsychologistList } from \"../components/PsychologistList/PsychologistList\";\r\nimport { usePsychologists } from \"../hooks/usePsychologists\";\r\nimport {\r\n  resetPsychologistsFavoriteState,\r\n  setClearFavoriteItem,\r\n  setFilter,\r\n  setPageFavorite,\r\n} from \"../redux/psychologists/psychologistsSlice\";\r\nimport { Loader } from \"../components/Loader/Loader\";\r\nimport { PaginationButtons } from \"../components/Pagination/Pagination\";\r\nimport { Filters } from \"../components/Filters/Filters\";\r\nimport { useFilters } from \"../hooks/useFilters\";\r\nimport { useQueryParams } from \"../hooks/useQueryParams\";\r\n\r\nconst PsychologistsFavoritePage: FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const {\r\n    favoriteItems,\r\n    pageFavorite,\r\n    pagesFavoriteQuantity,\r\n    loading,\r\n    clearFavoriteItem,\r\n  } = usePsychologists();\r\n  const { standard, name, price, popular } = useFilters();\r\n\r\n  const isFirstRender = useRef(true);\r\n\r\n  const params = useQueryParams(standard, name, price, popular);\r\n\r\n  useEffect(() => {\r\n    if (!isFirstRender.current) {\r\n      dispatch(psychologistsFavorite({ pageFavorite, params }));\r\n    }\r\n  }, [dispatch, pageFavorite, params]);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      dispatch(psychologistsFavorite({ pageFavorite, params }));\r\n      isFirstRender.current = false;\r\n    }\r\n  }, [dispatch, pageFavorite, params]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      favoriteItems.length === 0 &&\r\n      pageFavorite === pagesFavoriteQuantity &&\r\n      pageFavorite > 1\r\n    ) {\r\n      dispatch(\r\n        psychologistsFavorite({ pageFavorite: pageFavorite - 1, params })\r\n      );\r\n      dispatch(setPageFavorite({ page: pageFavorite - 1 }));\r\n    }\r\n  }, [dispatch, favoriteItems, pageFavorite, pagesFavoriteQuantity, params]);\r\n\r\n  useEffect(() => {\r\n    if (favoriteItems.length === 2 || favoriteItems.length === 1) {\r\n      if (pageFavorite < pagesFavoriteQuantity && clearFavoriteItem) {\r\n        dispatch(psychologistsFavorite({ pageFavorite, params }));\r\n        dispatch(setPageFavorite({ page: pageFavorite }));\r\n        dispatch(setClearFavoriteItem());\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    favoriteItems,\r\n    pageFavorite,\r\n    pagesFavoriteQuantity,\r\n    clearFavoriteItem,\r\n    params,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(resetPsychologistsFavoriteState());\r\n      dispatch(setFilter({ filter: \"Default\" }));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        <Filters />\r\n        {loading && <Loader />}\r\n        {favoriteItems.length > 0 && <PsychologistList items={favoriteItems} />}\r\n        {favoriteItems.length > 0 && <PaginationButtons />}\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default PsychologistsFavoritePage;\r\n"],"names":["FiltersWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","filterOptions","Autocomplete","MuiAutocomplete","width","padding","borderRadius","TextField","MuiTextField","cursor","Filters","filter","usePsychologists","dispatch","useDispatch","changeFilterUrl","useFilters","_jsxs","children","_jsx","options","getOptionLabel","option","renderInput","params","value","onChange","handleChange","_","newValue","key","getFilterKeyValue","setPage","page","setPageFavorite","setFilter","onKeyDown","event","preventDefault","clearIcon","ClipLoaderContainer","Loader","ClipLoader","color","CustomStack","Stack","PaginationButtons","isLoggedIn","useAuth","pagesQuantity","pagesFavoriteQuantity","favoriteItems","pageFavorite","count","currentPage","Pagination","length","showFirstButton","showLastButton","InfoWrapper","ImgCard","Img","img","_templateObject3","Profession","_templateObject4","RatingPriceFavoriteWrapper","_templateObject5","RatingPriceWrapper","_templateObject6","SvgStar","svg","_templateObject7","Delimiter","span","_templateObject8","Rating","_templateObject9","Price","_templateObject10","PriceAccent","_templateObject11","ButtonSvg","button","_templateObject12","SvgHeart","_templateObject13","_ref","$owner","undefined","_ref2","_templateObject14","List","ul","_templateObject15","ListItem","li","_templateObject16","ListItemAccent","_templateObject17","About","p","_templateObject18","ReviewList","_templateObject19","ReviewerCard","_templateObject20","ReviewerAvatar","_templateObject21","ReviewerName","_templateObject22","RatingCard","_templateObject23","ReviewerComment","_templateObject24","ButtonMakeAppointment","_templateObject25","ButtonReadMore","_templateObject26","PsychologistListCard","item","showMore","setShowMore","useState","_Fragment","src","avatar_url","alt","name","height","href","concat","sprite","rating","price_per_hour","onClick","handleSvgClick","setClearFavoriteItem","updatePsychologistsCardFavoriteLoggedIn","id","_id","updatePsychologistsCardLoggedIn","toast","error","owner","experience","license","specialization","initial_consultation","about","reviews","map","review","reviewer","slice","comment","prevState","PsychologistList","items","setParams","useSearchParams","standard","get","price","popular","delete","set","resetFilterUrl","itemsSelector","state","psychologists","favoriteItemsSelector","clearFavoriteItemSelector","clearFavoriteItem","filterSelector","pagesQuantitySelector","pagesFavoriteQuantitySelector","pageSelector","pageFavoriteSelector","loadingSelector","loading","errorSelector","useSelector","useQueryParams","useMemo","newParams","URLSearchParams","toString","PsychologistsFavoritePage","isFirstRender","useRef","useEffect","current","psychologistsFavorite","resetPsychologistsFavoriteState","Section","Container"],"sourceRoot":""}