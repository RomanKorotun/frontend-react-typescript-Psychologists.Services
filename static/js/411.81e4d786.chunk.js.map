{"version":3,"file":"static/js/411.81e4d786.chunk.js","mappings":"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","sources":["components/Filters/Filters.styled.js","helpers/filterOptions.ts","components/Filters/Filters.tsx","helpers/getFilterKeyValue.ts","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.tsx","components/PsychologistList/PsychologistList.styled.js","components/PsychologistList/PsychologistList.tsx","hooks/useFilters.ts","hooks/useQueryParams.ts","page/PsychologistsFavoritePage.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FiltersWrapper = styled.div`\r\n  margin-bottom: 26px;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 129%;\r\n  color: #8a8a89;\r\n  margin-bottom: 8px;\r\n`;\r\n","export const filterOptions = [\r\n  \"Default\",\r\n  \"A to Z\",\r\n  \"Z to A\",\r\n  \"From expensive to cheap \",\r\n  \"From cheap to expensive\",\r\n  \"From most popular\",\r\n  \"From least popular\",\r\n];\r\n","import { FC, KeyboardEvent, SyntheticEvent } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Autocomplete as MuiAutocomplete,\r\n  TextField as MuiTextField,\r\n} from \"@mui/material\";\r\nimport { FiltersWrapper, Title } from \"./Filters.styled\";\r\nimport { filterOptions } from \"../../helpers/filterOptions\";\r\nimport styled from \"styled-components\";\r\nimport { useFilters } from \"../../hooks/useFilters\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport {\r\n  setFilter,\r\n  setPage,\r\n  setPageFavorite,\r\n} from \"../../redux/psychologists/psychologistsSlice\";\r\nimport { usePsychologists } from \"../../hooks/usePsychologists\";\r\nimport { getFilterKeyValue } from \"../../helpers/getFilterKeyValue\";\r\n\r\nconst Autocomplete = styled(MuiAutocomplete<string, false, false>)({\r\n  width: \"290px\",\r\n  \".MuiOutlinedInput-root\": {\r\n    padding: \"16px !important\",\r\n    borderRadius: \"14px\",\r\n  },\r\n});\r\n\r\nconst TextField = styled(MuiTextField)({\r\n  \"& .MuiInputBase-input\": {\r\n    cursor: \"pointer\",\r\n    padding: \"0 !important\",\r\n  },\r\n});\r\n\r\nexport const Filters: FC = () => {\r\n  const { filter } = usePsychologists();\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const { changeFilterUrl } = useFilters();\r\n\r\n  const handleChange = (_: SyntheticEvent, newValue: string | null) => {\r\n    const { key, value } = getFilterKeyValue(newValue);\r\n    dispatch(setPage({ page: 1 }));\r\n    dispatch(setPageFavorite({ page: 1 }));\r\n    dispatch(setFilter({ filter: newValue }));\r\n    changeFilterUrl(key, value);\r\n  };\r\n\r\n  const handleKeyDown = (event: KeyboardEvent<HTMLDivElement>) => {\r\n    if (\r\n      event.key !== \"ArrowDown\" &&\r\n      event.key !== \"ArrowUp\" &&\r\n      event.key !== \"Enter\"\r\n    ) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FiltersWrapper>\r\n      <Title>Filters</Title>\r\n      <Autocomplete\r\n        options={filterOptions}\r\n        getOptionLabel={(option: string) => option}\r\n        renderInput={(params) => <TextField {...params} />}\r\n        value={filter}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        clearIcon={null}\r\n      />\r\n    </FiltersWrapper>\r\n  );\r\n};\r\n","import { filterOptions } from \"./filterOptions\";\r\n\r\nexport const getFilterKeyValue = (newValue: string | null) => {\r\n  switch (newValue) {\r\n    case filterOptions[0]:\r\n      return { key: \"standard\", value: \"all\" };\r\n    case filterOptions[1]:\r\n      return { key: \"name\", value: \"asc\" };\r\n    case filterOptions[2]:\r\n      return { key: \"name\", value: \"desc\" };\r\n    case filterOptions[3]:\r\n      return { key: \"price\", value: \"desc\" };\r\n    case filterOptions[4]:\r\n      return { key: \"price\", value: \"asc\" };\r\n    case filterOptions[5]:\r\n      return { key: \"popular\", value: \"desc\" };\r\n    case filterOptions[6]:\r\n      return { key: \"popular\", value: \"asc\" };\r\n    default:\r\n      return { key: \"\", value: \"\" };\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport const CustomStack = styled(Stack)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import { ChangeEvent, FC } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { usePsychologists } from \"../../hooks/usePsychologists\";\r\nimport { CustomStack } from \"./Pagination.styled\";\r\nimport {\r\n  setPage,\r\n  setPageFavorite,\r\n} from \"../../redux/psychologists/psychologistsSlice\";\r\n\r\nexport const PaginationButtons: FC = () => {\r\n  const { isLoggedIn } = useAuth();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const {\r\n    pagesQuantity,\r\n    pagesFavoriteQuantity,\r\n    favoriteItems,\r\n    page,\r\n    pageFavorite,\r\n  } = usePsychologists();\r\n\r\n  const handleChange = (_: ChangeEvent<unknown>, page: number) => {\r\n    if (isLoggedIn && favoriteItems.length > 0) {\r\n      dispatch(setPageFavorite({ page }));\r\n    } else {\r\n      dispatch(setPage({ page }));\r\n    }\r\n  };\r\n\r\n  const count =\r\n    pagesQuantity > 1\r\n      ? pagesQuantity\r\n      : pageFavorite > 1\r\n      ? pagesFavoriteQuantity\r\n      : 1;\r\n\r\n  const currentPage = page > 1 ? page : pageFavorite > 1 ? pageFavorite : 1;\r\n\r\n  return (\r\n    <CustomStack>\r\n      <Pagination\r\n        count={count}\r\n        page={currentPage}\r\n        onChange={handleChange}\r\n        showFirstButton\r\n        showLastButton\r\n      />\r\n    </CustomStack>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  cursor: pointer;\r\n  @media screen and (max-width: 350px) {\r\n    padding-right: 10px;\r\n    padding-left: 10px;\r\n  }\r\n  position: relative;\r\n  background-color: #fbfbfb;\r\n  border-radius: 20px;\r\n  padding-top: 20px;\r\n  padding-right: 20px;\r\n  padding-bottom: 20px;\r\n  padding-left: 20px;\r\n  @media screen and (max-width: 699px) {\r\n    padding-top: 60px;\r\n  }\r\n  @media screen and (min-width: 930px) {\r\n    padding-left: 160px;\r\n  }\r\n  transition: transform 250ms, box-shadow 250ms;\r\n  box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.2);\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 4px 4px 20px rgba(0, 0, 0, 0.2);\r\n    transform: scale(1.01);\r\n  }\r\n  &:not(:last-of-type) {\r\n    margin-bottom: 32px;\r\n  }\r\n`;\r\n","import { FC } from \"react\";\r\nimport { PsychologistListCard } from \"../PsychologistListCard/PsychologistListCard\";\r\nimport { List, ListItem } from \"./PsychologistList.styled\";\r\nimport { IPsychologistListProps } from \"../../interfaces/psychologistsInterfaces\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const PsychologistList: FC<IPsychologistListProps> = ({ items }) => {\r\n  const navigate = useNavigate();\r\n  const handleClick = (id: string) => {\r\n    navigate(`/psychologist/${id}`);\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      {items.map((item) => (\r\n        <ListItem key={item._id} onClick={() => handleClick(item._id)}>\r\n          <PsychologistListCard item={item} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n","import { useSearchParams } from \"react-router-dom\";\r\n\r\nexport const useFilters = () => {\r\n  const [params, setParams] = useSearchParams();\r\n  const standard = params.get(\"standard\");\r\n  const name = params.get(\"name\");\r\n  const price = params.get(\"price\");\r\n  const popular = params.get(\"popular\");\r\n\r\n  const changeFilterUrl = (key: string, value: string) => {\r\n    params.delete(\"standard\");\r\n    params.delete(\"name\");\r\n    params.delete(\"price\");\r\n    params.delete(\"popular\");\r\n    if (value) {\r\n      params.set(key, value);\r\n    }\r\n    setParams(params);\r\n  };\r\n\r\n  const resetFilterUrl = () => {\r\n    params.delete(\"standard\");\r\n    params.delete(\"name\");\r\n    params.delete(\"price\");\r\n    params.delete(\"popular\");\r\n    setParams(params);\r\n  };\r\n\r\n  return { standard, name, price, popular, changeFilterUrl, resetFilterUrl };\r\n};\r\n","import { useMemo } from \"react\";\r\n\r\nexport const useQueryParams = (\r\n  standard: string | null,\r\n  name: string | null,\r\n  price: string | null,\r\n  popular: string | null\r\n) => {\r\n  return useMemo(() => {\r\n    const newParams: URLSearchParams = new URLSearchParams();\r\n    standard && newParams.set(\"standard\", standard);\r\n    name && newParams.set(\"name\", name);\r\n    price && newParams.set(\"price\", price);\r\n    popular && newParams.set(\"popular\", popular);\r\n    return newParams.toString();\r\n  }, [standard, name, price, popular]);\r\n};\r\n","import { FC, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"../redux/store\";\r\nimport { psychologistsFavorite } from \"../redux/api\";\r\nimport { Container, Section } from \"../GlobaStyles\";\r\nimport { PsychologistList } from \"../components/PsychologistList/PsychologistList\";\r\nimport { usePsychologists } from \"../hooks/usePsychologists\";\r\nimport {\r\n  resetPsychologistsFavoriteState,\r\n  setClearFavoriteItem,\r\n  setFilter,\r\n  setNewReview,\r\n  setPageFavorite,\r\n} from \"../redux/psychologists/psychologistsSlice\";\r\nimport { Loader } from \"../components/Loader/Loader\";\r\nimport { PaginationButtons } from \"../components/Pagination/Pagination\";\r\nimport { Filters } from \"../components/Filters/Filters\";\r\nimport { useFilters } from \"../hooks/useFilters\";\r\nimport { useQueryParams } from \"../hooks/useQueryParams\";\r\nimport { useSocket } from \"../hooks/useSocket\";\r\n\r\nconst PsychologistsFavoritePage: FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const {\r\n    favoriteItems,\r\n    pageFavorite,\r\n    pagesFavoriteQuantity,\r\n    loading,\r\n    clearFavoriteItem,\r\n  } = usePsychologists();\r\n  const { standard, name, price, popular } = useFilters();\r\n  const socket = useSocket();\r\n\r\n  const isFirstRender = useRef(true);\r\n\r\n  const params = useQueryParams(standard, name, price, popular);\r\n\r\n  useEffect(() => {\r\n    if (!isFirstRender.current) {\r\n      dispatch(psychologistsFavorite({ pageFavorite, params }));\r\n    }\r\n  }, [dispatch, pageFavorite, params]);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      dispatch(psychologistsFavorite({ pageFavorite, params }));\r\n      isFirstRender.current = false;\r\n    }\r\n  }, [dispatch, pageFavorite, params]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      favoriteItems.length === 0 &&\r\n      pageFavorite === pagesFavoriteQuantity &&\r\n      pageFavorite > 1\r\n    ) {\r\n      dispatch(\r\n        psychologistsFavorite({ pageFavorite: pageFavorite - 1, params })\r\n      );\r\n      dispatch(setPageFavorite({ page: pageFavorite - 1 }));\r\n    }\r\n  }, [dispatch, favoriteItems, pageFavorite, pagesFavoriteQuantity, params]);\r\n\r\n  useEffect(() => {\r\n    if (favoriteItems.length === 2 || favoriteItems.length === 1) {\r\n      if (pageFavorite < pagesFavoriteQuantity && clearFavoriteItem) {\r\n        dispatch(psychologistsFavorite({ pageFavorite, params }));\r\n        dispatch(setPageFavorite({ page: pageFavorite }));\r\n        dispatch(setClearFavoriteItem());\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    favoriteItems,\r\n    pageFavorite,\r\n    pagesFavoriteQuantity,\r\n    clearFavoriteItem,\r\n    params,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(resetPsychologistsFavoriteState());\r\n      dispatch(setFilter({ filter: \"Default\" }));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"newReview\", (review) => {\r\n        dispatch(setNewReview(review));\r\n      });\r\n      return () => {\r\n        socket.off(\"newReview\");\r\n      };\r\n    }\r\n  }, [dispatch, socket]);\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        <Filters />\r\n        {loading && <Loader />}\r\n        {favoriteItems.length > 0 && <PsychologistList items={favoriteItems} />}\r\n        {favoriteItems.length > 0 && <PaginationButtons />}\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default PsychologistsFavoritePage;\r\n"],"names":["FiltersWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","filterOptions","Autocomplete","MuiAutocomplete","width","padding","borderRadius","TextField","MuiTextField","cursor","Filters","filter","usePsychologists","dispatch","useDispatch","changeFilterUrl","useFilters","_jsxs","children","_jsx","options","getOptionLabel","option","renderInput","params","value","onChange","handleChange","_","newValue","key","getFilterKeyValue","setPage","page","setPageFavorite","setFilter","onKeyDown","event","preventDefault","clearIcon","CustomStack","Stack","PaginationButtons","isLoggedIn","useAuth","pagesQuantity","pagesFavoriteQuantity","favoriteItems","pageFavorite","count","currentPage","Pagination","length","showFirstButton","showLastButton","List","ul","ListItem","li","PsychologistList","_ref","items","navigate","useNavigate","map","item","onClick","handleClick","id","_id","concat","PsychologistListCard","setParams","useSearchParams","standard","get","name","price","popular","delete","set","resetFilterUrl","useQueryParams","useMemo","newParams","URLSearchParams","toString","PsychologistsFavoritePage","loading","clearFavoriteItem","socket","useSocket","isFirstRender","useRef","useEffect","current","psychologistsFavorite","setClearFavoriteItem","resetPsychologistsFavoriteState","on","review","setNewReview","off","Section","Container","Loader"],"sourceRoot":""}