{"version":3,"file":"static/js/804.23b5ab87.chunk.js","mappings":"uOAGO,MAAMA,EAAcC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mJASxBC,EAAUJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qNAYpBG,EAAMN,EAAAA,GAAOO,IAAGC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,mEAMhBM,EAAaT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,8GAIzBQ,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,cAAc,IAIxCC,EAA6Bf,EAAAA,GAAOC,IAAGe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,4MAYvCc,EAAqBjB,EAAAA,GAAOC,IAAGiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,oDAK/BgB,EAAUnB,EAAAA,GAAOoB,IAAGC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,8DACrBmB,IAAA,IAAC,MAAEV,GAAOU,EAAA,OAAKV,EAAMC,OAAOU,YAAY,IAC1CC,IAAA,IAAC,UAAEC,EAAS,MAAEb,GAAOY,EAAA,OAC3BC,EAAYb,EAAMc,SAASC,cAAgBf,EAAMc,SAASE,gBAAgB,IAIjEC,EAAY7B,EAAAA,GAAO8B,KAAIC,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,oEACzB6B,IAAA,IAAC,MAAEpB,GAAOoB,EAAA,OAAKpB,EAAMC,OAAOC,cAAc,IAKxCmB,EAASjC,EAAAA,GAAO8B,KAAII,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,4JAOtBgC,IAAA,IAAC,MAAEvB,GAAOuB,EAAA,OAAKvB,EAAMC,OAAOU,YAAY,IAGtCa,EAAQpC,EAAAA,GAAO8B,KAAIO,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,sLAWnBmC,EAActC,EAAAA,GAAO8B,KAAIS,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,yBAC3BqC,IAAA,IAAC,MAAE5B,GAAO4B,EAAA,OAAK5B,EAAMC,OAAO4B,WAAW,IAGrCC,EAAY1C,EAAAA,GAAO2C,OAAMC,IAAAA,GAAAzC,EAAAA,EAAAA,GAAA,6FAWzB0C,EAAW7C,EAAAA,GAAOoB,IAAG0B,IAAAA,GAAA3C,EAAAA,EAAAA,GAAA,wCACxB4C,IAAwB,IAAvB,OAAEC,EAAM,MAAEpC,GAAOmC,EACxB,YAAeE,IAAXD,GAA0C,IAAlBA,EAAOE,OAC1B,OAEAtC,EAAMc,SAASyB,aACxB,IAEQC,IAAwB,IAAvB,OAAEJ,EAAM,MAAEpC,GAAOwC,EAC1B,YAAeH,IAAXD,GAA0C,IAAlBA,EAAOE,OAC1B,UAEAtC,EAAMC,OAAOU,YACtB,IAIS8B,EAAQrD,EAAAA,GAAOC,IAAGqD,IAAAA,GAAAnD,EAAAA,EAAAA,GAAA,6GAIpBoD,IAAA,IAAC,MAAE3C,GAAO2C,EAAA,OAAK3C,EAAMC,OAAOU,YAAY,IAItCiC,EAAOxD,EAAAA,GAAOyD,GAAEC,IAAAA,GAAAvD,EAAAA,EAAAA,GAAA,kKAUhBwD,EAAW3D,EAAAA,GAAO4D,GAAEC,IAAAA,GAAA1D,EAAAA,EAAAA,GAAA,mKACX2D,IAAA,IAAC,MAAElD,GAAOkD,EAAA,OAAKlD,EAAMc,SAASqC,cAAc,IASrDC,EAAiBhE,EAAAA,GAAO8B,KAAImC,IAAAA,GAAA9D,EAAAA,EAAAA,GAAA,yBAC9B+D,IAAA,IAAC,MAAEtD,GAAOsD,EAAA,OAAKtD,EAAMC,OAAOU,YAAY,IAGtC4C,EAAQnE,EAAAA,GAAOoE,EAACC,IAAAA,GAAAlE,EAAAA,EAAAA,GAAA,+GAIlBmE,IAAA,IAAC,MAAE1D,GAAO0D,EAAA,OAAK1D,EAAMC,OAAOC,cAAc,IAIxCyD,GAAgBvE,EAAAA,GAAOC,IAAGuE,IAAAA,GAAArE,EAAAA,EAAAA,GAAA,sFAO1BsE,GAAezE,EAAAA,GAAO2C,OAAM+B,IAAAA,GAAAvE,EAAAA,EAAAA,GAAA,iWAGnBwE,IAAA,IAAC,MAAE/D,GAAO+D,EAAA,OAAK/D,EAAMc,SAASyB,aAAa,IAWzCyB,IAAA,IAAC,MAAEhE,GAAOgE,EAAA,OAAKhE,EAAMc,SAASmD,mBAAmB,IAI5DC,GAAa9E,EAAAA,GAAOyD,GAAEsB,IAAAA,GAAA5E,EAAAA,EAAAA,GAAA,kHAQtB6E,GAAehF,EAAAA,GAAOC,IAAGgF,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,kEAMzB+E,GAAiBlF,EAAAA,GAAOO,IAAG4E,IAAAA,GAAAhF,EAAAA,EAAAA,GAAA,kEAM3BiF,GAAepF,EAAAA,GAAOC,IAAGoF,IAAAA,GAAAlF,EAAAA,EAAAA,GAAA,qDAKzBmF,GAAetF,EAAAA,GAAOC,IAAGsF,IAAAA,GAAApF,EAAAA,EAAAA,GAAA,yFAG3BqF,IAAA,IAAC,MAAE5E,GAAO4E,EAAA,OAAK5E,EAAMC,OAAOU,YAAY,IAItCkE,GAAkBzF,EAAAA,GAAOoE,EAACsB,IAAAA,GAAAvF,EAAAA,EAAAA,GAAA,wFAI5BwF,IAAA,IAAC,MAAE/E,GAAO+E,EAAA,OAAK/E,EAAMC,OAAOC,cAAc,IAGxC8E,GAAkB5F,EAAAA,GAAOC,IAAG4F,IAAAA,GAAA1F,EAAAA,EAAAA,GAAA,yBAC9B2F,IAAA,IAAC,MAAElF,GAAOkF,EAAA,OAAKlF,EAAMC,OAAOC,cAAc,IChJrD,MACA,GAAe,IAA0B,0D,yGC/ElC,MAAMiF,IAAoB/F,EAAAA,EAAAA,IAAOgG,KAAPhG,CAAaE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,6bAOxBQ,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMc,SAASE,gBAAgB,IAevDqE,GAAkBjG,EAAAA,GAAOC,IAAGI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,qNAQ9BmB,IAAA,IAAC,MAAEV,GAAOU,EAAA,OAAKV,EAAMC,OAAOU,YAAY,IAItC2E,GAAwBlG,EAAAA,GAAOoE,EAAC5D,KAAAA,IAAAL,EAAAA,EAAAA,GAAA,4MAWhCgG,IAAanG,EAAAA,EAAAA,IAAOoG,GAAAA,GAAPpG,CAAYU,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,uDAKzBkG,GAAcrG,EAAAA,GAAOsG,MAAKtF,KAAAA,IAAAb,EAAAA,EAAAA,GAAA,yDAK1BoG,IAAcvG,EAAAA,EAAAA,IAAOwG,GAAAA,GAAPxG,CAAakB,KAAAA,IAAAf,EAAAA,EAAAA,GAAA,gSAGlBqB,IAAA,IAAC,MAAEZ,GAAOY,EAAA,OAAKZ,EAAMC,OAAO4F,cAAc,IAUnDzE,IAAA,IAAC,MAAEpB,GAAOoB,EAAA,OAAKpB,EAAMC,OAAOU,YAAY,IAIxCmF,IAAS1G,EAAAA,EAAAA,IAAO2G,GAAAA,GAAP3G,CAAoBqB,KAAAA,IAAAlB,EAAAA,EAAAA,GAAA,oGAK/BgC,IAAA,IAAC,MAAEvB,GAAOuB,EAAA,OAAKvB,EAAMC,OAAO+F,UAAU,IAGpCC,GAAe7G,EAAAA,GAAO2C,OAAMZ,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,yXASnBqC,IAAA,IAAC,MAAE5B,GAAO4B,EAAA,OAAK5B,EAAMc,SAASyB,aAAa,IAMzCJ,IAAA,IAAC,MAAEnC,GAAOmC,EAAA,OAAKnC,EAAMc,SAASmD,mBAAmB,I,cCjGzE,MAEaiC,GAAcC,GAAAA,KAAaC,MAAM,CAC5CC,OAAQF,GAAAA,KACLG,SAAS,YACTC,KAAK,cAAe,YAAaC,GAAoB,IAAVA,IAC9CC,QAASN,GAAAA,KAAaG,SAAS,cAGpBI,GAAmBP,GAAAA,KAAaC,MAAM,CACjDO,YAAaR,GAAAA,KAAaG,SAAS,YACnCM,aAAcT,GAAAA,KAAaG,SAAS,YACpCO,aAAcV,GAAAA,KACXW,QAbe,mDAaM,iBACrBR,SAAS,YACZS,KAAMZ,GAAAA,KAAWG,SAAS,YAC1BU,KAAMb,GAAAA,KAAaG,SAAS,cAGjBW,GAAkCd,GAAAA,KAAaC,MAAM,CAChEQ,aAAcT,GAAAA,KAAaG,SAAS,YACpCS,KAAMZ,GAAAA,KAAWG,SAAS,YAC1BU,KAAMb,GAAAA,KAAaG,SAAS,c,OCtBvB,MAAM/F,GAAUnB,EAAAA,GAAOoB,IAAGlB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,+D,cCG1B,MAAM2H,GAAwCnH,IAI9C,IAJ+C,WACpDoH,EAAU,YACVC,EAAW,cACXC,GACDtH,EACC,OACEuH,EAAAA,GAAAA,KAAA,OAAAC,SACG,IAAIC,MAAML,IAAaM,KAAI,CAACC,EAAGC,KAC9BL,EAAAA,GAAAA,KAAC/G,GAAO,CAENqH,QAASA,IAAMR,EAAYO,EAAQ,GACnCE,KAAMF,EAAQN,EAAgB,UAAY,UAAUE,UAEpDD,EAAAA,GAAAA,KAAA,OAAKQ,KAAI,GAAAC,OAAKC,GAAM,iBAJfL,MAOL,EChBGM,GAA8BlI,IAAgC,IAA/B,MAAEmI,EAAK,KAAEC,KAASC,GAAOrI,EACnE,OAAOuH,EAAAA,GAAAA,KAAA,eAAcY,KAAWE,GAAS,E,eCiB3ChD,KAAAA,cAAoB,SAEb,MAAMiD,GAAqCtI,IAI3C,IAJ4C,GACjDuI,EAAE,YACFC,EAAW,cACXC,GACDzI,EACC,MAAOsG,EAAQoC,IAAaC,EAAAA,EAAAA,UAAiB,GAEvCC,GAAWC,EAAAA,EAAAA,OAajBC,EAAAA,EAAAA,YAAU,IACD,KACLN,GAAeE,EAAU,EAAE,GAE5B,CAACF,IAWJ,OACEO,EAAAA,GAAAA,MAAC3D,GAAiB,CAChB4D,OAAQR,EACRS,eAAgBR,EAChBS,aAAa,eACbC,MAdgB,CAClBC,QAAS,CACPC,OAAQ,KAEVC,QAAS,CACPD,OAAQ,MASW7B,SAAA,EAEnBD,EAAAA,GAAAA,KAACgC,GAAAA,GAAM,CACLC,cAAe,CACblD,OAAQ,EACRI,QAAS,IAEX+C,iBAAkBtD,GAClBuD,SAvCgBC,IACpBf,GACEgB,EAAAA,GAAAA,IAAyB,CACvBrB,KACAjC,OAAQqD,EAAOrD,OACfI,QAASiD,EAAOjD,WAGpB+B,GAAe,EA+BYjB,SAEtB7G,IAAA,IAAC,cAAEkJ,GAAqClJ,EAAA,OACvCoI,EAAAA,GAAAA,MAAAe,GAAAA,SAAA,CAAAtC,SAAA,EACED,EAAAA,GAAAA,KAACjC,GAAe,CAAAkC,SAAC,YACjBD,EAAAA,GAAAA,KAAChC,GAAqB,CAAAiC,SAAC,qMAKvBuB,EAAAA,GAAAA,MAACvD,GAAU,CAAAgC,SAAA,EACTuB,EAAAA,GAAAA,MAACrD,GAAW,CAAA8B,SAAA,EACVD,EAAAA,GAAAA,KAACJ,GAAe,CACdC,WAAY,EACZC,YAAcO,IACZiC,EAAc,SAAUjC,GACxBc,EAAUd,EAAM,EAElBN,cAAehB,KAEjBiB,EAAAA,GAAAA,KAACxB,GAAM,CAACgE,UAAU,MAAMC,KAAK,eAG/BjB,EAAAA,GAAAA,MAACrD,GAAW,CAAA8B,SAAA,EACVD,EAAAA,GAAAA,KAAC3B,GAAW,CACVoE,KAAK,UACLC,YAAY,UACZF,UAAW7B,MAEbX,EAAAA,GAAAA,KAACxB,GAAM,CAACgE,UAAU,MAAMC,KAAK,gBAG/BzC,EAAAA,GAAAA,KAACrB,GAAY,CAACgE,KAAK,SAAQ1C,SAAC,gBAE7B,KAIPD,EAAAA,GAAAA,KAAC4C,GAAAA,EAAgB,CAACtC,QAASY,MACT,E,eC3GjB,MAAM2B,GAA4CpK,IAGlD,IAHmD,WACxDoH,EAAU,cACVE,GACDtH,EACC,OACEuH,EAAAA,GAAAA,KAAA,OAAAC,SACG,IAAIC,MAAML,IAAaM,KAAI,CAACC,EAAGC,KAC9BL,EAAAA,GAAAA,KAAC/G,GAAO,CAENsH,KAAMF,EAAQN,EAAgB,UAAY,UAAUE,UAEpDD,EAAAA,GAAAA,KAAA,OAAKQ,KAAI,GAAAC,OAAKC,GAAM,iBAHfL,MAML,E,iDCfH,MAAMyC,IAAyBhL,EAAAA,EAAAA,IAAOgG,KAAPhG,CAAaE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,0aAM7BQ,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMc,SAASE,gBAAgB,IAevDqJ,GAAuBjL,EAAAA,GAAOC,IAAGI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,qNAQnCmB,IAAA,IAAC,MAAEV,GAAOU,EAAA,OAAKV,EAAMC,OAAOU,YAAY,IAItC2J,GAA6BlL,EAAAA,GAAOoE,EAAC5D,KAAAA,IAAAL,EAAAA,EAAAA,GAAA,4MAWrCgL,GAAmBnL,EAAAA,GAAOC,IAAGS,KAAAA,IAAAP,EAAAA,EAAAA,GAAA,0CAK7BiL,GAAqBpL,EAAAA,GAAOO,IAAGS,KAAAA,IAAAb,EAAAA,EAAAA,GAAA,2FAO/BkL,GAAYrL,EAAAA,GAAOC,IAAGiB,KAAAA,IAAAf,EAAAA,EAAAA,GAAA,yFAGxBqB,IAAA,IAAC,MAAEZ,GAAOY,EAAA,OAAKZ,EAAMC,OAAOC,cAAc,IAIxCwK,GAAOtL,EAAAA,GAAOC,IAAGoB,KAAAA,IAAAlB,EAAAA,EAAAA,GAAA,wFAInB6B,IAAA,IAAC,MAAEpB,GAAOoB,EAAA,OAAKpB,EAAMC,OAAOU,YAAY,IAGtCgK,IAAkBvL,EAAAA,EAAAA,IAAOoG,GAAAA,GAAPpG,CAAY+B,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,uDAK9BqL,GAAexL,EAAAA,GAAOC,IAAGiC,KAAAA,IAAA/B,EAAAA,EAAAA,GAAA,yDAKzBsL,GAAqBzL,EAAAA,GAAOC,IAAGoC,KAAAA,IAAAlC,EAAAA,EAAAA,GAAA,kEAM/BuL,GAAmB1L,EAAAA,GAAOC,IAAGsC,KAAAA,IAAApC,EAAAA,EAAAA,GAAA,mUAGlBgC,IAAA,IAAC,MAAEvB,GAAOuB,EAAA,OAAKvB,EAAMC,OAAO4F,cAAc,IASnDjE,IAAA,IAAC,MAAE5B,GAAO4B,EAAA,OAAK5B,EAAMC,OAAOU,YAAY,IAK1CoK,GAAmB3L,EAAAA,GAAOC,IAAG2C,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,iCAI7BoG,IAAcvG,EAAAA,EAAAA,IAAOwG,GAAAA,GAAPxG,CAAa8C,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,mOAClB4C,IAAA,IAAC,MAAEnC,GAAOmC,EAAA,OAAKnC,EAAMC,OAAO4F,cAAc,IASnDrD,IAAA,IAAC,MAAExC,GAAOwC,EAAA,OAAKxC,EAAMC,OAAOU,YAAY,IAIxCmF,IAAS1G,EAAAA,EAAAA,IAAO2G,GAAAA,GAAP3G,CAAoBsD,KAAAA,IAAAnD,EAAAA,EAAAA,GAAA,oGAK/BoD,IAAA,IAAC,MAAE3C,GAAO2C,EAAA,OAAK3C,EAAMC,OAAO+F,UAAU,IAGpCC,GAAe7G,EAAAA,GAAO2C,OAAMe,KAAAA,IAAAvD,EAAAA,EAAAA,GAAA,yXASnB2D,IAAA,IAAC,MAAElD,GAAOkD,EAAA,OAAKlD,EAAMc,SAASyB,aAAa,IAMzCe,IAAA,IAAC,MAAEtD,GAAOsD,EAAA,OAAKtD,EAAMc,SAASmD,mBAAmB,I,2CCtIlE,MAAM+G,GAAmCjL,IAIzC,IAJ0C,eAC/CkL,EAAc,SACdC,EAAQ,cACRtB,GACD7J,EACC,MAAM4I,GAAWC,EAAAA,EAAAA,OAcjBC,EAAAA,EAAAA,YAAU,IACD,KACLF,GAASwC,EAAAA,GAAAA,IAAgB,CAAEpE,KAAM,OAAQ,GAE1C,CAAC4B,IAOJ,OACErB,EAAAA,GAAAA,KAAC8D,KAAU,CACTF,SAAUA,EACVG,SA1BsBtE,IACxB6C,EAAc,OAAQ7C,GACtBA,GAAQ4B,GAASwC,EAAAA,GAAAA,IAAgB,CAAEpE,MAAMuE,EAAAA,EAAAA,IAAOvE,EAAM,iBACtDA,GACE4B,GACE4C,EAAAA,GAAAA,IAAuB,CACrBN,iBACAlE,MAAMuE,EAAAA,EAAAA,IAAOvE,EAAM,gBAEtB,EAkBDyE,WAAW,aACXC,mBAAiB,EACjBC,eAAgB,CAAC,IAAIC,MACrBC,gBAAgB,OAChBC,WAAa9E,IAbEA,KACjB,MAAM+E,EAAM/E,EAAKgF,SACjB,OAAe,IAARD,GAAqB,IAARA,CAAS,EAWJE,CAAUjF,IACjC,E,kBCnDC,MAAMkF,GAAmB7M,EAAAA,GAAO8M,OAAM5M,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,mNAKvBQ,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAO4F,cAAc,I,0BCezD,MAAMsG,GAAmCpM,IAIzC,IAJ0C,eAC/CkL,EAAc,MACdzE,EAAK,cACLoD,GACD7J,EACC,MAAMqM,GAASC,EAAAA,GAAAA,MACT1D,GAAWC,EAAAA,EAAAA,OAEX,aAAE0D,EAAY,cAAEC,EAAa,SAAEC,IAAaC,EAAAA,GAAAA,KAgDlD,OA3BA5D,EAAAA,EAAAA,YAAU,KACR,GAAIuD,GAAUE,EAIZ,OAHAF,EAAOM,GAAG,mBAAoBH,IAC5B5D,GAASgE,EAAAA,GAAAA,IAA0BJ,GAAe,IAE7C,KACLH,EAAOQ,IAAI,kBAAkB,CAEjC,GACC,CAACjE,EAAUyD,EAAQE,KAEtBzD,EAAAA,EAAAA,YAAU,KACJyD,GACF1C,EAAc,OAAQ,GACxB,GACC,CAAC0C,EAAc1C,KAElBf,EAAAA,EAAAA,YAAU,KACR,MAAMgE,EAAqBA,KACzBL,GAAY7D,GAASmE,EAAAA,GAAAA,IAAsB,CAAEN,aAAY,EAG3D,OADAO,OAAOC,iBAAiB,eAAgBH,GACjC,KACLE,OAAOE,oBAAoB,eAAgBJ,EAAmB,CAC/D,GACA,CAAClE,EAAU6D,KAGZ1D,EAAAA,GAAAA,MAACmD,GAAgB,CACfzF,MAAOA,EACP6E,SAjDsB6B,IACxB,MAAMlG,EAAOkG,EAAMC,OAAO3G,MAE1BoD,EAAc,OAAQ5C,GAEtB,MAAMoG,EAAcZ,IAAYa,EAAAA,GAAAA,OAC/Bb,GAAY7D,GAAS2E,EAAAA,GAAAA,IAAYF,IAElCd,GACE3D,GACE4E,EAAAA,GAAAA,IAAuB,CACrBtC,iBACAlE,KAAMuF,EACNtF,OACAwF,SAAUA,GAAYY,IAEzB,EAkCDI,UAAWlB,EAAa/E,SAAA,EAExBD,EAAAA,GAAAA,KAAA,UAAQd,MAAM,GAAGgH,UAAQ,EAAAjG,SAAC,SAIzBgF,EAAc9E,KAAI,CAACgG,EAAU9F,KAC5BL,EAAAA,GAAAA,KAAA,UAEEd,MAAOiH,EAASzG,KAChBwG,SAAUC,EAASC,WAAWnG,SAE7BkG,EAASzG,MAJLW,OAOQ,EC3DvBvC,KAAAA,cAAoB,SAEb,MAAMuI,GAAiE5N,IAOvE,IAPwE,GAC7EuI,EAAE,OACFsF,EAAM,KACN7D,EAAI,YACJxB,EAAW,eACXsF,EAAc,cACdrF,GACDzI,EACC,MAAM,SAAEyM,IAAaC,EAAAA,GAAAA,KAEf9D,GAAWC,EAAAA,EAAAA,MAyBXkF,EAAqBA,KACzBtB,GAAY7D,GAASmE,EAAAA,GAAAA,IAAsB,CAAEN,cAC7C7D,GAAS2E,EAAAA,GAAAA,IAAY,OACrB9E,GAAe,EAYjB,OACEM,EAAAA,GAAAA,MAACsB,GAAsB,CACrBrB,OAAQR,EACRS,eAAgB8E,EAChB7E,aAAa,oBACbC,MAdgB,CAClBC,QAAS,CACPC,OAAQ,KAEVC,QAAS,CACPD,OAAQ,MASW7B,SAAA,EAEnBD,EAAAA,GAAAA,KAACgC,GAAAA,GAAM,CACLC,cAAe,CACb0B,eAAgB3C,EAChBkE,SAAU,GACV7F,YAAa,GACbC,aAAc,GACdC,aAAc,GACdE,KAAM,KACNC,KAAM,IAERwC,iBAAkB9C,GAClB+C,SAxDgBC,IACpB8C,GACE7D,GACEoF,EAAAA,GAAAA,IAAc,CACZC,OAAQH,EACRI,SAAU,MACVC,YAAa,eACbC,QAAS3B,KAGfA,GACE9C,EAAO3C,MACP4B,GACEyF,EAAAA,GAAAA,IAAiC,IAC5B1E,EACH3C,MAAMuE,EAAAA,EAAAA,IAAO5B,EAAO3C,KAAM,cAC1ByF,cAGN7D,GAAS2E,EAAAA,GAAAA,IAAY,OACrB9E,GAAe,EAoCYjB,SAEtB7G,IAAA,IAAC,cAAEkJ,EAAa,OAAEF,GAAQhJ,EAAA,OACzBoI,EAAAA,GAAAA,MAAAe,GAAAA,SAAA,CAAAtC,SAAA,EACED,EAAAA,GAAAA,KAAC+C,GAAoB,CAAA9C,SAAC,iBACtBD,EAAAA,GAAAA,KAACgD,GAA0B,CAAA/C,SAAC,uGAK5BuB,EAAAA,GAAAA,MAACyB,GAAgB,CAAAhD,SAAA,EACfD,EAAAA,GAAAA,KAACkD,GAAkB,CAAC6D,IAAKT,EAAQU,IAAI,YACrCxF,EAAAA,GAAAA,MAAA,OAAAvB,SAAA,EACED,EAAAA,GAAAA,KAACmD,GAAS,CAAAlD,SAAC,uBACXD,EAAAA,GAAAA,KAACoD,GAAI,CAAAnD,SAAEwC,WAIXjB,EAAAA,GAAAA,MAAC6B,GAAe,CAAApD,SAAA,EACduB,EAAAA,GAAAA,MAAC8B,GAAY,CAAArD,SAAA,EACXD,EAAAA,GAAAA,KAAC3B,GAAW,CAACoE,KAAK,cAAcC,YAAY,UAC5C1C,EAAAA,GAAAA,KAACxB,GAAM,CAACgE,UAAU,MAAMC,KAAK,oBAG/BjB,EAAAA,GAAAA,MAAC8B,GAAY,CAAArD,SAAA,EACXD,EAAAA,GAAAA,KAAC3B,GAAW,CAACoE,KAAK,eAAeC,YAAY,WAC7C1C,EAAAA,GAAAA,KAACxB,GAAM,CAACgE,UAAU,MAAMC,KAAK,qBAG/BjB,EAAAA,GAAAA,MAAC8B,GAAY,CAAArD,SAAA,EACXD,EAAAA,GAAAA,KAAC3B,GAAW,CACVoE,KAAK,eACLE,KAAK,QACLD,YAAY,WAEd1C,EAAAA,GAAAA,KAACxB,GAAM,CAACgE,UAAU,MAAMC,KAAK,qBAG/BjB,EAAAA,GAAAA,MAAC+B,GAAkB,CAAAtD,SAAA,EACjBuB,EAAAA,GAAAA,MAACgC,GAAgB,CAAAvD,SAAA,EACfD,EAAAA,GAAAA,KAAC0D,GAAU,CACTC,eAAgB3C,EAChB4C,SAAUxB,EAAO3C,KACjB6C,cAAeA,KAEjBtC,EAAAA,GAAAA,KAACxB,GAAM,CAACgE,UAAU,MAAMC,KAAK,aAG/BjB,EAAAA,GAAAA,MAACiC,GAAgB,CAAAxD,SAAA,EACfD,EAAAA,GAAAA,KAAC6E,GAAU,CACTlB,eAAgB3C,EAChB9B,MAAOkD,EAAO1C,KACd4C,cAAeA,KAEjBtC,EAAAA,GAAAA,KAACxB,GAAM,CAACgE,UAAU,MAAMC,KAAK,gBAIjCzC,EAAAA,GAAAA,KAACrB,GAAY,CAACgE,KAAK,SAAQ1C,SAAC,UAE5BD,EAAAA,GAAAA,KAAA,OAAK4B,MAAO,CAAEqF,SAAU,OAAQC,UAAW,MAAOC,MAAO,OAAQlH,SAAC,sKAGlED,EAAAA,GAAAA,KAAA,OAAK4B,MAAO,CAAEqF,SAAU,OAAQE,MAAO,OAAQlH,SAAC,oIAGhDD,EAAAA,GAAAA,KAAA,OAAK4B,MAAO,CAAEqF,SAAU,OAAQE,MAAO,OAAQlH,SAAC,2FAIjD,KAIPD,EAAAA,GAAAA,KAAC4C,GAAAA,EAAgB,CAACtC,QAASkG,MACJ,ECjJ7B1I,KAAAA,cAAoB,SAEb,MAAMsJ,GAA8D3O,IAOpE,IAPqE,GAC1EuI,EAAE,OACFsF,EAAM,KACN7D,EAAI,YACJxB,EAAW,eACXsF,EAAc,cACdrF,GACDzI,EACC,MAAM,SAAEyM,IAAaC,EAAAA,GAAAA,KAEf9D,GAAWC,EAAAA,EAAAA,MAyBXkF,EAAqBA,KACzBtB,GAAY7D,GAASmE,EAAAA,GAAAA,IAAsB,CAAEN,cAC7C7D,GAAS2E,EAAAA,GAAAA,IAAY,OACrB9E,GAAe,EAYjB,OACEM,EAAAA,GAAAA,MAACsB,GAAsB,CACrBrB,OAAQR,EACRS,eAAgB8E,EAChB7E,aAAa,oBACbC,MAdgB,CAClBC,QAAS,CACPC,OAAQ,KAEVC,QAAS,CACPD,OAAQ,MASW7B,SAAA,EAEnBD,EAAAA,GAAAA,KAACgC,GAAAA,GAAM,CACLC,cAAe,CACb0B,eAAgB3C,EAChBkE,SAAU,GACV5F,aAAc,GACdG,KAAM,KACNC,KAAM,IAERwC,iBAAkBvC,GAClBwC,SAtDgBC,IACpB8C,GACE7D,GACEoF,EAAAA,GAAAA,IAAc,CACZC,OAAQH,EACRI,SAAU,MACVC,YAAa,eACbC,QAAS3B,KAGfA,GACE9C,EAAO3C,MACP4B,GACEgG,EAAAA,GAAAA,IAA8B,IACzBjF,EACH3C,MAAMuE,EAAAA,EAAAA,IAAO5B,EAAO3C,KAAM,cAC1ByF,cAGN7D,GAAS2E,EAAAA,GAAAA,IAAY,OACrB9E,GAAe,EAkCYjB,SAEtB7G,IAAA,IAAC,cAAEkJ,EAAa,OAAEF,GAAQhJ,EAAA,OACzBoI,EAAAA,GAAAA,MAAAe,GAAAA,SAAA,CAAAtC,SAAA,EACED,EAAAA,GAAAA,KAAC+C,GAAoB,CAAA9C,SAAC,iBACtBD,EAAAA,GAAAA,KAACgD,GAA0B,CAAA/C,SAAC,uGAK5BuB,EAAAA,GAAAA,MAACyB,GAAgB,CAAAhD,SAAA,EACfD,EAAAA,GAAAA,KAACkD,GAAkB,CAAC6D,IAAKT,EAAQU,IAAI,YACrCxF,EAAAA,GAAAA,MAAA,OAAAvB,SAAA,EACED,EAAAA,GAAAA,KAACmD,GAAS,CAAAlD,SAAC,uBACXD,EAAAA,GAAAA,KAACoD,GAAI,CAAAnD,SAAEwC,WAIXjB,EAAAA,GAAAA,MAAC6B,GAAe,CAAApD,SAAA,EACduB,EAAAA,GAAAA,MAAC8B,GAAY,CAAArD,SAAA,EACXD,EAAAA,GAAAA,KAAC3B,GAAW,CAACoE,KAAK,eAAeC,YAAY,WAC7C1C,EAAAA,GAAAA,KAACxB,GAAM,CAACgE,UAAU,MAAMC,KAAK,qBAG/BjB,EAAAA,GAAAA,MAAC+B,GAAkB,CAAAtD,SAAA,EACjBuB,EAAAA,GAAAA,MAACgC,GAAgB,CAAAvD,SAAA,EACfD,EAAAA,GAAAA,KAAC0D,GAAU,CACTC,eAAgB3C,EAChB4C,SAAUxB,EAAO3C,KACjB6C,cAAeA,KAEjBtC,EAAAA,GAAAA,KAACxB,GAAM,CAACgE,UAAU,MAAMC,KAAK,aAG/BjB,EAAAA,GAAAA,MAACiC,GAAgB,CAAAxD,SAAA,EACfD,EAAAA,GAAAA,KAAC6E,GAAU,CACTlB,eAAgB3C,EAChB9B,MAAOkD,EAAO1C,KACd4C,cAAeA,KAEjBtC,EAAAA,GAAAA,KAACxB,GAAM,CAACgE,UAAU,MAAMC,KAAK,gBAIjCzC,EAAAA,GAAAA,KAACrB,GAAY,CAACgE,KAAK,SAAQ1C,SAAC,UAE5BD,EAAAA,GAAAA,KAAA,OAAK4B,MAAO,CAAEqF,SAAU,OAAQC,UAAW,MAAOC,MAAO,OAAQlH,SAAC,sKAGlED,EAAAA,GAAAA,KAAA,OAAK4B,MAAO,CAAEqF,SAAU,OAAQE,MAAO,OAAQlH,SAAC,oIAGhDD,EAAAA,GAAAA,KAAA,OAAK4B,MAAO,CAAEqF,SAAU,OAAQE,MAAO,OAAQlH,SAAC,2FAIjD,KAIPD,EAAAA,GAAAA,KAAC4C,GAAAA,EAAgB,CAACtC,QAASkG,MACJ,EC/GhBc,GAAuC7O,IAAe,IAAd,KAAE8O,GAAM9O,EAC3D,MAAO+O,EAAmBC,IAAwBrG,EAAAA,EAAAA,WAAkB,IAC7DsG,EAAwBC,IAC7BvG,EAAAA,EAAAA,WAAkB,IACd,cAAEwG,IAAkBC,EAAAA,GAAAA,MACpB,WAAEC,IAAeC,EAAAA,GAAAA,MACjB,YAAEC,EAAW,iBAAEC,IAAqB9C,EAAAA,GAAAA,KAEpC+C,GAAUC,EAAAA,EAAAA,QAAwB,MAElCrD,GAASC,EAAAA,GAAAA,MAET1D,GAAWC,EAAAA,EAAAA,MACX8G,GAAWC,EAAAA,GAAAA,MAEXC,EAAyBA,KAC7BX,GAA2BY,IAAwBA,GAAU,EAGzDC,EAAoBA,KACxBf,GAAsBc,IAAwBA,GAAU,EA2BpDE,EACJL,EAASM,WAAQ,iBAAAjI,OAAsB8G,EAAKoB,KAqC9C,OA7BApH,EAAAA,EAAAA,YAAU,KACR,GAAIuD,EAIF,OAHAA,EAAOM,GAAG,aAAcwD,IACtBvH,GAASwH,EAAAA,GAAAA,IAAaD,GAAQ,IAEzB,KACL9D,EAAOQ,IAAI,YAAY,CAE3B,GACC,CAACjE,EAAUyD,KAEdvD,EAAAA,EAAAA,YAAU,KACR,GAAIuD,EAIF,OAHAA,EAAOM,GAAG,0BAA2B0D,IACnCzH,GAAS0H,EAAAA,GAAAA,IAAuBD,GAAqB,IAEhD,KACLhE,EAAOQ,IAAI,yBAAyB,CAExC,GACC,CAACjE,EAAUyD,KAEdvD,EAAAA,EAAAA,YAAU,KACJ2G,EAAQc,SAAWhB,GAAeC,IACpCC,EAAQc,QAAQC,SAChB5H,GAAS6H,EAAAA,GAAAA,OACX,GACC,CAAC7H,EAAU2G,EAAaC,EAAkBC,KAG3C1G,EAAAA,GAAAA,MAAAe,GAAAA,SAAA,CAAAtC,SAAA,EACEuB,EAAAA,GAAAA,MAAC3J,EAAW,CAAAoI,SAAA,EACVD,EAAAA,GAAAA,KAAC9H,EAAO,CAAA+H,UACND,EAAAA,GAAAA,KAAC5H,EAAG,CAAC2O,IAAKQ,EAAK4B,WAAYnC,IAAI,cAEjCxF,EAAAA,GAAAA,MAAA,OAAAvB,SAAA,EACED,EAAAA,GAAAA,KAACzH,EAAU,CAAA0H,SAAC,kBACZD,EAAAA,GAAAA,KAAC7E,EAAK,CAAA8E,SAAEsH,EAAK9E,cAIjBjB,EAAAA,GAAAA,MAAC3I,EAA0B,CAAAoH,SAAA,EACzBuB,EAAAA,GAAAA,MAACzI,EAAkB,CAAAkH,SAAA,EACjBD,EAAAA,GAAAA,KAAC/G,EAAO,CAACmQ,MAAO,GAAIC,OAAQ,GAAI9P,UAAWgO,EAAKxI,OAAS,EAAEkB,UACzDD,EAAAA,GAAAA,KAAA,OAAKQ,KAAI,GAAAC,OAAKC,GAAM,mBAEtBc,EAAAA,GAAAA,MAACzH,EAAM,CAAAkG,SAAA,CAAC,WAASsH,EAAKxI,WACtBiB,EAAAA,GAAAA,KAACrG,EAAS,CAAAsG,SAAC,OACXuB,EAAAA,GAAAA,MAACtH,EAAK,CAAA+F,SAAA,CAAC,oBACWuB,EAAAA,GAAAA,MAACpH,EAAW,CAAA6F,SAAA,CAAEsH,EAAKhB,eAAe,cAGtDvG,EAAAA,GAAAA,KAACxF,EAAS,CAAC8F,QA3EOsF,IACtBA,EAAM0D,kBACDxB,EAIDF,EAAc5M,OAAS,GACzBqG,GAASkI,EAAAA,GAAAA,OACTlI,GAASmI,EAAAA,GAAAA,IAAwC,CAAExI,GAAIuG,EAAKoB,QAE5DtH,GAASoI,EAAAA,GAAAA,IAAgC,CAAEzI,GAAIuG,EAAKoB,OAPpDe,EAAAA,GAAMC,MAAM,6DAQd,EAgEuC1J,UACjCD,EAAAA,GAAAA,KAACrF,EAAQ,CAACG,OAAQyM,EAAKqC,MAAOR,MAAO,GAAIC,OAAQ,GAAGpJ,UAClDD,EAAAA,GAAAA,KAAA,OAAKQ,KAAI,GAAAC,OAAKC,GAAM,yBAK1Bc,EAAAA,GAAAA,MAAClG,EAAI,CAAA2E,SAAA,EACHuB,EAAAA,GAAAA,MAAC/F,EAAQ,CAAAwE,SAAA,CAAC,gBACID,EAAAA,GAAAA,KAAClE,EAAc,CAAAmE,SAAEsH,EAAKsC,iBAEpCrI,EAAAA,GAAAA,MAAC/F,EAAQ,CAAAwE,SAAA,CAAC,aACCD,EAAAA,GAAAA,KAAClE,EAAc,CAAAmE,SAAEsH,EAAKuC,cAEjCtI,EAAAA,GAAAA,MAAC/F,EAAQ,CAAAwE,SAAA,CAAC,oBACQD,EAAAA,GAAAA,KAAClE,EAAc,CAAAmE,SAAEsH,EAAKwC,qBAExCvI,EAAAA,GAAAA,MAAC/F,EAAQ,CAAAwE,SAAA,CAAC,wBACc,KACtBD,EAAAA,GAAAA,KAAClE,EAAc,CAAAmE,SAAEsH,EAAKyC,6BAIzBvB,IAA6BzI,EAAAA,GAAAA,KAAC/D,EAAK,CAAAgE,SAAEsH,EAAK0C,SACzCxB,IACAjH,EAAAA,GAAAA,MAACvF,EAAK,CAAAgE,SAAA,CAAEsH,EAAK0C,MAAMC,MAAM,EAAG,KAAK,UAGlCzB,IACCjH,EAAAA,GAAAA,MAACnF,GAAa,CAAA4D,SAAA,EACZD,EAAAA,GAAAA,KAACzD,GAAY,CAAC+D,QAnHUsF,IAC9BA,EAAM0D,kBACNhB,GAAwB,EAiH4BrI,SAAC,wBAG9C6H,IACC9H,EAAAA,GAAAA,KAACzD,GAAY,CAAC+D,QAlHGsF,IACzBA,EAAM0D,kBACNd,GAAmB,EAgH8BvI,SAAC,sBAO/CwI,IACK,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAM4C,UACN5C,EAAK4C,QAAQnP,OAAS,IACpBgF,EAAAA,GAAAA,KAACpD,GAAU,CAAAqD,SACRsH,EAAK4C,QACHhK,KAAI,CAACyI,EAAQvI,KACZmB,EAAAA,GAAAA,MAAA,MAAAvB,SAAA,EACEuB,EAAAA,GAAAA,MAAC1E,GAAY,CAAAmD,SAAA,EACXD,EAAAA,GAAAA,KAAChD,GAAc,CAAC+J,IAAK6B,EAAOtC,UAC5B9E,EAAAA,GAAAA,MAAA,OAAAvB,SAAA,EACED,EAAAA,GAAAA,KAAC9C,GAAY,CAAA+C,UACV+D,EAAAA,EAAAA,IAAO,IAAIK,KAAKuE,EAAOnJ,MAAO,iBAEjCO,EAAAA,GAAAA,KAAC5C,GAAY,CAAA6C,SAAE2I,EAAOwB,YACtBpK,EAAAA,GAAAA,KAAC6C,GAAiB,CAChBhD,WAAY,EACZE,cAAe6I,EAAO7J,gBAI5BiB,EAAAA,GAAAA,KAACzC,GAAe,CAAA0C,SAAE2I,EAAOzJ,YAdlBkB,KAiBVgK,YAIR5B,IACK,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAM4C,UACkB,IAAxB5C,EAAK4C,QAAQnP,SACXgF,EAAAA,GAAAA,KAACtC,GAAe,CAAAuC,SACb6H,EAjIT,kEAGA,mEAkIIA,IACA9H,EAAAA,GAAAA,KAACqG,GAAkC,CACjCrF,GAAIuG,EAAKoB,IACTrC,OAAQiB,EAAK4B,WACb1G,KAAM8E,EAAK9E,KACX8D,eAAgBgB,EAAKhB,eACrBtF,YAAayG,EACbxG,cAAeoH,IAIlBR,IACC9H,EAAAA,GAAAA,KAACoH,GAA+B,CAC9BpG,GAAIuG,EAAKoB,IACTrC,OAAQiB,EAAK4B,WACb1G,KAAM8E,EAAK9E,KACX8D,eAAgBgB,EAAKhB,eACrBtF,YAAayG,EACbxG,cAAeoH,IAIlBR,IACC9H,EAAAA,GAAAA,KAACe,GAAW,CACVC,GAAIuG,EAAKoB,IACT1H,YAAauG,EACbtG,cAAesH,KAInBhH,EAAAA,GAAAA,MAAA,QACE8I,IAAKpC,EACLqC,OAAO,OACPC,OAAM,6CAAA/J,OAA+CuH,EAAW,eAAAvH,OAAcwH,GAC9EpC,OAAO,SAAQ5F,SAAA,EAEfD,EAAAA,GAAAA,KAAA,SAAO2C,KAAK,SAASF,KAAK,OAAOvD,MAAO8I,KACxChI,EAAAA,GAAAA,KAAA,SAAO2C,KAAK,SAASF,KAAK,YAAYvD,MAAO+I,SAE9C,C,gDCrRA,MAAMwC,EAAyBC,GACpCA,EAAMC,aAAa1F,cACR2F,EAAwBF,GACnCA,EAAMC,aAAa3F,aACR6F,EAAoBH,GAC/BA,EAAMC,aAAazF,SACR4F,EAA4BJ,GACvCA,EAAMC,aAAaI,iBACRC,EAAuBN,GAClCA,EAAMC,aAAaM,YACRC,EAAmBR,GAAqBA,EAAMC,aAAaQ,QAC3DC,EAAuBV,GAClCA,EAAMC,aAAa3C,YACRqD,EAA4BX,GACvCA,EAAMC,aAAa1C,iBCJR9C,EAAkBA,KAUtB,CACLH,cAVmBsG,EAAAA,EAAAA,IAAYV,GAW/B3F,eAVoBqG,EAAAA,EAAAA,IAAYb,GAWhCvF,UAVeoG,EAAAA,EAAAA,IAAYT,GAW3BE,kBAVuBO,EAAAA,EAAAA,IAAYR,GAWnCG,aAVkBK,EAAAA,EAAAA,IAAYN,GAW9BG,SAVcG,EAAAA,EAAAA,IAAYJ,GAW1BlD,aAVkBsD,EAAAA,EAAAA,IAAYF,GAW9BnD,kBAVuBqD,EAAAA,EAAAA,IAAYD,I,gDClBhC,MAAME,EAAiBb,GAAqBA,EAAMc,cAAcC,MAC1DC,EAAmBhB,GAC9BA,EAAMc,cAAcG,QACTC,EAAyBlB,GACpCA,EAAMc,cAAc5D,cACTiE,EAA6BnB,GACxCA,EAAMc,cAAcM,kBACTC,EAAkBrB,GAAqBA,EAAMc,cAAcQ,OAC3DC,EAAyBvB,GACpCA,EAAMc,cAAcU,cACTC,EAAiCzB,GAC5CA,EAAMc,cAAcU,cACTE,EAAgB1B,GAAqBA,EAAMc,cAAca,KACzDC,EAAwB5B,GACnCA,EAAMc,cAAce,aACTrB,EAAmBR,GAC9BA,EAAMc,cAAcL,QACTqB,EAAiB9B,GAAqBA,EAAMc,cAAc7B,MCJ1D9B,EAAmBA,KAavB,CACL4D,OAbYH,EAAAA,EAAAA,IAAYC,GAcxBI,SAbcL,EAAAA,EAAAA,IAAYI,GAc1B9D,eAboB0D,EAAAA,EAAAA,IAAYM,GAchCE,mBAbwBR,EAAAA,EAAAA,IAAYO,GAcpCG,QAbaV,EAAAA,EAAAA,IAAYS,GAczBG,eAboBZ,EAAAA,EAAAA,IAAYW,GAchCQ,uBAb4BnB,EAAAA,EAAAA,IAAYa,GAcxCE,MAbWf,EAAAA,EAAAA,IAAYc,GAcvBG,cAbmBjB,EAAAA,EAAAA,IAAYgB,GAc/BnB,SAbcG,EAAAA,EAAAA,IAAYJ,GAc1BvB,OAbY2B,EAAAA,EAAAA,IAAYkB,I","sources":["components/PsychologistListCard/PsychologistListCard.styled.ts","images/icons.svg","components/Modal/ModalReview/ModalReview.styled.ts","validationShemas/psychologistShemas.ts","components/StarRating/StarRating.styles.ts","components/StarRating/StarRatingModal.tsx","components/TextArea/TextArea.tsx","components/Modal/ModalReview/ModalReview.tsx","components/StarRating/StarRatingComment.tsx","components/Modal/ModalAppointment/ModalAppointment.styled.tsx","components/DateAndTimePicker/SelectDate.tsx","components/DateAndTimePicker/SelectTime/SelectTime.styled.ts","components/DateAndTimePicker/SelectTime/SelectTime.tsx","components/Modal/ModalAppointment/ModalAppointmentForNotLoggedInUser..tsx","components/Modal/ModalAppointment/ModalAppointmentForLoggedInUser.tsx","components/PsychologistListCard/PsychologistListCard.tsx","redux/appointments/appointmentsSelectors.ts","hooks/useAppointments.ts","redux/psychologists/psychologistsSelecrors.ts","hooks/usePsychologists.ts"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { ISvgStarProps } from \"../../interfaces/psychologistsInterfaces\";\r\n\r\nexport const InfoWrapper = styled.div`\r\n  @media screen and (max-width: 929px) {\r\n    margin-bottom: 20px;\r\n  }\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ImgCard = styled.div`\r\n  @media screen and (min-width: 930px) {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 20px;\r\n  }\r\n  display: inline-block;\r\n  border-radius: 30px;\r\n  border: 1px solid #deeee7;\r\n  padding: 12px;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 96px;\r\n  height: 96px;\r\n  border-radius: 15px;\r\n`;\r\n\r\nexport const Profession = styled.div`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: ${({ theme }) => theme.colors.secondaryColor};\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nexport const RatingPriceFavoriteWrapper = styled.div`\r\n  @media screen and (max-width: 699px) {\r\n    left: 20px;\r\n  }\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const RatingPriceWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SvgStar = styled.svg<ISvgStarProps>`\r\n  stroke: ${({ theme }) => theme.colors.primaryColor};\r\n  fill: ${({ $isFilled, theme }) =>\r\n    $isFilled ? theme.bgColors.ratingBgGolor : theme.bgColors.secondaryBgColor};\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const Delimiter = styled.span`\r\n  color: ${({ theme }) => theme.colors.secondaryColor};\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const Rating = styled.span`\r\n  @media screen and (max-width: 380px) {\r\n    font-size: 12px;\r\n  }\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  color: ${({ theme }) => theme.colors.primaryColor};\r\n`;\r\n\r\nexport const Price = styled.span`\r\n  @media screen and (max-width: 380px) {\r\n    font-size: 12px;\r\n  }\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  color: #191a15;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const PriceAccent = styled.span`\r\n  color: ${({ theme }) => theme.colors.accentColor};\r\n`;\r\n\r\nexport const ButtonSvg = styled.button`\r\n  padding: 0;\r\n  height: 20px;\r\n  background-color: transparent;\r\n  border: none;\r\n`;\r\n\r\ninterface MySvgHeartProps {\r\n  $owner: string[] | undefined;\r\n}\r\n\r\nexport const SvgHeart = styled.svg<MySvgHeartProps>`\r\n  fill: ${({ $owner, theme }) => {\r\n    if ($owner === undefined || $owner.length === 0) {\r\n      return \"none\";\r\n    } else {\r\n      return theme.bgColors.accentBgColor;\r\n    }\r\n  }};\r\n  stroke: ${({ $owner, theme }) => {\r\n    if ($owner === undefined || $owner.length === 0) {\r\n      return \"#181914\";\r\n    } else {\r\n      return theme.colors.primaryColor;\r\n    }\r\n  }};\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  color: ${({ theme }) => theme.colors.primaryColor};\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  max-width: 840px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n  column-gap: 4px;\r\n  row-gap: 8px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  background-color: ${({ theme }) => theme.bgColors.primaryBgColor};\r\n  border-radius: 24px;\r\n  padding: 8px 16px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: #8a8a89;\r\n`;\r\n\r\nexport const ListItemAccent = styled.span`\r\n  color: ${({ theme }) => theme.colors.primaryColor};\r\n`;\r\n\r\nexport const About = styled.p`\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: ${({ theme }) => theme.colors.secondaryColor};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const ButtonAction = styled.button`\r\n  border-radius: 30px;\r\n  padding: 14px 32px;\r\n  background-color: ${({ theme }) => theme.bgColors.accentBgColor};\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n  letter-spacing: -0.01em;\r\n  color: #fbfbfb;\r\n  border: none;\r\n  transition: transform 250ms, background-color 250ms;\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale(1.01);\r\n    background-color: ${({ theme }) => theme.bgColors.activeAccentBgColor};\r\n  }\r\n`;\r\n\r\nexport const ReviewList = styled.ul`\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n`;\r\n\r\nexport const ReviewerCard = styled.div`\r\n  display: flex;\r\n  gap: 12px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const ReviewerAvatar = styled.img`\r\n  width: 54px;\r\n  height: 54px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const ReviewerDate = styled.div`\r\n  font-size: 10px;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nexport const ReviewerName = styled.div`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  color: ${({ theme }) => theme.colors.primaryColor};\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nexport const ReviewerComment = styled.p`\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.25;\r\n  color: ${({ theme }) => theme.colors.secondaryColor};\r\n`;\r\n\r\nexport const NotFoundMessage = styled.div`\r\n  color: ${({ theme }) => theme.colors.secondaryColor};\r\n`;\r\n","var _symbol, _symbol2, _symbol3, _symbol4;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"arrow-icon\",\n    viewBox: \"0 0 28 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fbfbfb\",\n    style: {\n      fill: \"var(--color1, #fbfbfb)\"\n    },\n    d: \"M24.137 3.149c-0.145-1.029-1.096-1.747-2.126-1.602l-16.776 2.358c-1.029 0.145-1.747 1.097-1.602 2.126s1.097 1.747 2.126 1.602l14.912-2.096 2.096 14.912c0.145 1.029 1.096 1.747 2.126 1.602s1.747-1.097 1.602-2.126l-2.358-16.776zM3.386 31.604l20.391-27.060-3.007-2.266-20.391 27.060 3.007 2.266z\"\n  })), _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"close-icon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.5,\n    d: \"M24 8l-16 16\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.5,\n    d: \"M8 8l16 16\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"heart-icon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.4615,\n    d: \"M27.787 6.147c-0.681-0.681-1.49-1.222-2.379-1.591s-1.844-0.559-2.807-0.559-1.917 0.19-2.807 0.559c-0.89 0.369-1.699 0.909-2.38 1.591l-1.413 1.413-1.413-1.413c-1.376-1.376-3.241-2.148-5.187-2.148s-3.811 0.773-5.187 2.148c-1.376 1.376-2.148 3.241-2.148 5.187s0.773 3.811 2.148 5.187l11.787 11.787 11.787-11.787c0.681-0.681 1.222-1.49 1.591-2.379s0.559-1.844 0.559-2.807-0.19-1.917-0.559-2.807c-0.369-0.89-0.909-1.699-1.591-2.38z\"\n  }))), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"star-icon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.4,\n    d: \"M12.4 9.394l3.6-6.822 3.6 6.822c0.318 0.603 0.899 1.025 1.571 1.141l7.601 1.315-5.376 5.532c-0.475 0.489-0.697 1.171-0.6 1.846l1.098 7.635-6.922-3.404c-0.612-0.301-1.329-0.301-1.941 0l-6.922 3.404 1.098-7.635c0.097-0.675-0.125-1.357-0.6-1.846l-5.376-5.532 7.601-1.315c0.672-0.116 1.252-0.538 1.571-1.141zM29.035 11.579v0zM7.767 27.031c0 0 0 0 0 0h-0z\"\n  }))), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"add-icon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.2,\n    d: \"M16 6.667v18.667\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.2,\n    d: \"M6.667 16h18.667\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.11db7b3d873b3d81b34a58236b79dd36.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\r\nimport Modal from \"react-modal\";\r\nimport { Field, Form, ErrorMessage } from \"formik\";\r\n\r\nexport const CustomModalReview = styled(Modal)`\r\n  position: relative;\r\n  z-index: 10000;\r\n  border-radius: 30px;\r\n  top: 50%;\r\n  left: 50%;\r\n  border: 1px solid #71736f;\r\n  background-color: ${({ theme }) => theme.bgColors.secondaryBgColor};\r\n  transform: translate(-50%, -50%);\r\n  overflow: auto;\r\n  width: 90%;\r\n  @media only screen and (max-width: 427px) {\r\n    padding: 20px;\r\n  }\r\n  @media only screen and (min-width: 428px) {\r\n    padding: 30px;\r\n  }\r\n  @media only screen and (min-width: 470px) {\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\nexport const TitleReviewForm = styled.div`\r\n  font-weight: 500;\r\n  font-size: 26px;\r\n  @media only screen and (min-width: 428px) {\r\n    font-size: 30px;\r\n  }\r\n  line-height: 1.2;\r\n  letter-spacing: -0.02em;\r\n  color: ${({ theme }) => theme.colors.primaryColor};\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const DescriptionReviewForm = styled.p`\r\n  @media only screen and (max-width: 427px) {\r\n    font-size: 12px;\r\n  }\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.25;\r\n  color: rgba(25, 26, 21, 0.5);\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const FormReview = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const LabelStyled = styled.label`\r\n  position: relative;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const FieldStyled = styled(Field)`\r\n  min-height: 100px;\r\n  resize: none;\r\n  border: 1px solid ${({ theme }) => theme.colors.fieldFormColor};\r\n  border-radius: 12px;\r\n  padding-top: 12px;\r\n  padding-left: 12px;\r\n  height: 38px;\r\n  width: 100%;\r\n  &::placeholder {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.25;\r\n    color: ${({ theme }) => theme.colors.primaryColor};\r\n  }\r\n`;\r\n\r\nexport const ErrMsg = styled(ErrorMessage)`\r\n  font-size: 13px;\r\n  position: absolute;\r\n  bottom: -14px;\r\n  left: 5px;\r\n  color: ${({ theme }) => theme.colors.errorColor};\r\n`;\r\n\r\nexport const ButtonSubmit = styled.button`\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n  letter-spacing: -0.01em;\r\n  color: #fbfbfb;\r\n  border-radius: 30px;\r\n  background-color: ${({ theme }) => theme.bgColors.accentBgColor};\r\n  border: none;\r\n  transition: transform 250ms, background-color 250ms;\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale(1.01);\r\n    background-color: ${({ theme }) => theme.bgColors.activeAccentBgColor};\r\n  }\r\n`;\r\n","import * as Yup from \"yup\";\r\n\r\nconst emailRegexp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\nexport const ReviewShema = Yup.object().shape({\r\n  rating: Yup.number()\r\n    .required(\"Required\")\r\n    .test(\"is-not-zero\", \"Required\", (value) => value !== 0),\r\n  comment: Yup.string().required(\"Required\"),\r\n});\r\n\r\nexport const AppointmentShema = Yup.object().shape({\r\n  client_name: Yup.string().required(\"Required\"),\r\n  client_phone: Yup.string().required(\"Required\"),\r\n  client_email: Yup.string()\r\n    .matches(emailRegexp, \"Invalid email\")\r\n    .required(\"Required\"),\r\n  date: Yup.date().required(\"Required\"),\r\n  time: Yup.string().required(\"Required\"),\r\n});\r\n\r\nexport const AppointmentForLoggedInUserShema = Yup.object().shape({\r\n  client_phone: Yup.string().required(\"Required\"),\r\n  date: Yup.date().required(\"Required\"),\r\n  time: Yup.string().required(\"Required\"),\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const SvgStar = styled.svg`\r\n  width: 16px;\r\n  height: 16px;\r\n  stroke: #191a15;\r\n`;\r\n","import { FC } from \"react\";\r\nimport { IStarRatingModal } from \"../../interfaces/reviewsInterface\";\r\nimport sprite from \"../../images/icons.svg\";\r\nimport { SvgStar } from \"./StarRating.styles\";\r\n\r\nexport const StarRatingModal: FC<IStarRatingModal> = ({\r\n  totalStars,\r\n  onStarClick,\r\n  selectedStars,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {[...Array(totalStars)].map((_, index) => (\r\n        <SvgStar\r\n          key={index}\r\n          onClick={() => onStarClick(index + 1)}\r\n          fill={index < selectedStars ? \"#ffc531\" : \"#fbfbfb\"}\r\n        >\r\n          <use href={`${sprite}#star-icon`} />\r\n        </SvgStar>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { FieldProps } from \"formik\";\r\nimport { FC } from \"react\";\r\n\r\ninterface TextAreaProps extends FieldProps {}\r\n\r\nexport const TextArea: FC<TextAreaProps> = ({ field, form, ...props }) => {\r\n  return <textarea {...field} {...props} />;\r\n};\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport { Formik, FormikProps } from \"formik\";\r\nimport {\r\n  ButtonSubmit,\r\n  CustomModalReview,\r\n  DescriptionReviewForm,\r\n  FieldStyled,\r\n  FormReview,\r\n  LabelStyled,\r\n  TitleReviewForm,\r\n  ErrMsg,\r\n} from \"./ModalReview.styled\";\r\nimport { IModalRevievProps } from \"../../../interfaces/authInterfaces\";\r\nimport { ReviewShema } from \"../../../validationShemas/psychologistShemas\";\r\nimport { StarRatingModal } from \"../../StarRating/StarRatingModal\";\r\nimport { IReview } from \"../../../interfaces/reviewsInterface\";\r\nimport { TextArea } from \"../../TextArea/TextArea\";\r\nimport { AppDispatch } from \"../../../redux/store\";\r\nimport { addReviewForLoggedInUser } from \"../../../redux/api\";\r\nimport { CloseModalButton } from \"../../CloseModalButton/CloseModalButton\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport const ModalReview: FC<IModalRevievProps> = ({\r\n  id,\r\n  isOpenModal,\r\n  onToggleModal,\r\n}) => {\r\n  const [rating, setRating] = useState<number>(0);\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const handleSubmit = (values: IReview) => {\r\n    dispatch(\r\n      addReviewForLoggedInUser({\r\n        id,\r\n        rating: values.rating,\r\n        comment: values.comment,\r\n      })\r\n    );\r\n    onToggleModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isOpenModal && setRating(0);\r\n    };\r\n  }, [isOpenModal]);\r\n\r\n  const modalStyles = {\r\n    overlay: {\r\n      zIndex: 1000,\r\n    },\r\n    content: {\r\n      zIndex: 1000,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <CustomModalReview\r\n      isOpen={isOpenModal}\r\n      onRequestClose={onToggleModal}\r\n      contentLabel=\"Review Modal\"\r\n      style={modalStyles}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          rating: 0,\r\n          comment: \"\",\r\n        }}\r\n        validationSchema={ReviewShema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ setFieldValue }: FormikProps<IReview>) => (\r\n          <>\r\n            <TitleReviewForm>Review</TitleReviewForm>\r\n            <DescriptionReviewForm>\r\n              Your feedback is very important to us. To improve the quality of\r\n              our service, we invite you to rate your experience with the\r\n              psychologist. Please leave your comments and a rating from 1 to 5.\r\n            </DescriptionReviewForm>\r\n            <FormReview>\r\n              <LabelStyled>\r\n                <StarRatingModal\r\n                  totalStars={5}\r\n                  onStarClick={(index) => {\r\n                    setFieldValue(\"rating\", index);\r\n                    setRating(index);\r\n                  }}\r\n                  selectedStars={rating}\r\n                />\r\n                <ErrMsg component=\"div\" name=\"rating\" />\r\n              </LabelStyled>\r\n\r\n              <LabelStyled>\r\n                <FieldStyled\r\n                  name=\"comment\"\r\n                  placeholder=\"Comment\"\r\n                  component={TextArea}\r\n                />\r\n                <ErrMsg component=\"div\" name=\"comment\" />\r\n              </LabelStyled>\r\n\r\n              <ButtonSubmit type=\"submit\">Submit</ButtonSubmit>\r\n            </FormReview>\r\n          </>\r\n        )}\r\n      </Formik>\r\n\r\n      <CloseModalButton onClick={onToggleModal} />\r\n    </CustomModalReview>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { IStarRatingComment } from \"../../interfaces/reviewsInterface\";\r\nimport sprite from \"../../images/icons.svg\";\r\nimport { SvgStar } from \"./StarRating.styles\";\r\n\r\nexport const StarRatingComment: FC<IStarRatingComment> = ({\r\n  totalStars,\r\n  selectedStars,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {[...Array(totalStars)].map((_, index) => (\r\n        <SvgStar\r\n          key={index}\r\n          fill={index < selectedStars ? \"#ffc531\" : \"#fbfbfb\"}\r\n        >\r\n          <use href={`${sprite}#star-icon`} />\r\n        </SvgStar>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport Modal from \"react-modal\";\r\nimport { Field, Form, ErrorMessage } from \"formik\";\r\n\r\nexport const CustomModalAppointment = styled(Modal)`\r\n  position: relative;\r\n  border-radius: 30px;\r\n  top: 50%;\r\n  left: 50%;\r\n  border: 1px solid #71736f;\r\n  background-color: ${({ theme }) => theme.bgColors.secondaryBgColor};\r\n  transform: translate(-50%, -50%);\r\n  overflow: auto;\r\n  width: 90%;\r\n  @media only screen and (max-width: 427px) {\r\n    padding: 20px;\r\n  }\r\n  @media only screen and (min-width: 428px) {\r\n    padding: 30px;\r\n  }\r\n  @media only screen and (min-width: 470px) {\r\n    width: 420px;\r\n  }\r\n`;\r\n\r\nexport const TitleAppointmentForm = styled.div`\r\n  font-weight: 500;\r\n  font-size: 26px;\r\n  @media only screen and (min-width: 428px) {\r\n    font-size: 30px;\r\n  }\r\n  line-height: 1.2;\r\n  letter-spacing: -0.02em;\r\n  color: ${({ theme }) => theme.colors.primaryColor};\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const DescriptionAppointmentForm = styled.p`\r\n  @media only screen and (max-width: 427px) {\r\n    font-size: 12px;\r\n  }\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.25;\r\n  color: rgba(25, 26, 21, 0.5);\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const PsychologistCard = styled.div`\r\n  display: flex;\r\n  gap: 14px;\r\n`;\r\n\r\nexport const PsychologistAvatar = styled.img`\r\n  width: 44px;\r\n  height: 44px;\r\n  border-radius: 15px;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const LabelName = styled.div`\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.secondaryColor};\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  color: ${({ theme }) => theme.colors.primaryColor};\r\n`;\r\n\r\nexport const FormAppointment = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const WrapperField = styled.div`\r\n  position: relative;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const WrapperDateAndTime = styled.div`\r\n  display: flex;\r\n  gap: 14px;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const WrapperDateField = styled.div`\r\n  position: relative;\r\n  .react-datepicker__input-container input {\r\n    border: 1px solid ${({ theme }) => theme.colors.fieldFormColor};\r\n    border-radius: 12px;\r\n    padding-left: 12px;\r\n    height: 38px;\r\n    width: 100%;\r\n    &::placeholder {\r\n      font-weight: 400;\r\n      font-size: 16px;\r\n      line-height: 1.25;\r\n      color: ${({ theme }) => theme.colors.primaryColor};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WrapperTimeField = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const FieldStyled = styled(Field)`\r\n  border: 1px solid ${({ theme }) => theme.colors.fieldFormColor};\r\n  border-radius: 12px;\r\n  padding-left: 12px;\r\n  height: 38px;\r\n  width: 100%;\r\n  &::placeholder {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.25;\r\n    color: ${({ theme }) => theme.colors.primaryColor};\r\n  }\r\n`;\r\n\r\nexport const ErrMsg = styled(ErrorMessage)`\r\n  font-size: 13px;\r\n  position: absolute;\r\n  bottom: -14px;\r\n  left: 5px;\r\n  color: ${({ theme }) => theme.colors.errorColor};\r\n`;\r\n\r\nexport const ButtonSubmit = styled.button`\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n  letter-spacing: -0.01em;\r\n  color: #fbfbfb;\r\n  border-radius: 30px;\r\n  background-color: ${({ theme }) => theme.bgColors.accentBgColor};\r\n  border: none;\r\n  transition: transform 250ms, background-color 250ms;\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale(1.01);\r\n    background-color: ${({ theme }) => theme.bgColors.activeAccentBgColor};\r\n  }\r\n`;\r\n","import { FC, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { format } from \"date-fns\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { getReservedTimesForDay } from \"../../redux/api\";\r\nimport { setSelectedDate } from \"../../redux/appointments/appointmentsSlice\";\r\n\r\ninterface ISelectDateProps {\r\n  psychologistId: string;\r\n  selected: Date | null;\r\n  setFieldValue: (field: string, value: Date | null) => void;\r\n}\r\n\r\nexport const SelectDate: FC<ISelectDateProps> = ({\r\n  psychologistId,\r\n  selected,\r\n  setFieldValue,\r\n}) => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setFieldValue(\"date\", date);\r\n    date && dispatch(setSelectedDate({ date: format(date, \"yyyy-MM-dd\") }));\r\n    date &&\r\n      dispatch(\r\n        getReservedTimesForDay({\r\n          psychologistId,\r\n          date: format(date, \"yyyy-MM-dd\"),\r\n        })\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setSelectedDate({ date: null }));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const isWeekend = (date: Date) => {\r\n    const day = date.getDay();\r\n    return day === 0 || day === 6;\r\n  };\r\n\r\n  return (\r\n    <DatePicker\r\n      selected={selected}\r\n      onChange={handleDateChange}\r\n      dateFormat=\"dd-MM-yyyy\"\r\n      showMonthDropdown\r\n      highlightDates={[new Date()]}\r\n      placeholderText=\"Date\"\r\n      filterDate={(date) => !isWeekend(date)}\r\n    />\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const SelectTimeStyled = styled.select`\r\n  @media only screen and (max-width: 427px) {\r\n    width: 128px;\r\n  }\r\n  width: 136px;\r\n  border: 1px solid ${({ theme }) => theme.colors.fieldFormColor};\r\n  border-radius: 12px;\r\n  padding-left: 12px;\r\n  padding-right: 6px;\r\n  height: 38px;\r\n`;\r\n","import { ChangeEvent, FC, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { SelectTimeStyled } from \"./SelectTime.styled\";\r\nimport { useAppointments } from \"../../../hooks/useAppointments\";\r\nimport { AppDispatch } from \"../../../redux/store\";\r\nimport {\r\n  addReservedTimesForDay,\r\n  appointmentIsComplete,\r\n} from \"../../../redux/api\";\r\nimport {\r\n  setAddReservedTimesForDay,\r\n  setClientId,\r\n} from \"../../../redux/appointments/appointmentsSlice\";\r\nimport { useSocket } from \"../../../contexts/SocketContext\";\r\n\r\ninterface ISelectTimeProps {\r\n  psychologistId: string;\r\n  value: string;\r\n  setFieldValue: (field: string, value: string) => void;\r\n}\r\n\r\nexport const SelectTime: FC<ISelectTimeProps> = ({\r\n  psychologistId,\r\n  value,\r\n  setFieldValue,\r\n}) => {\r\n  const socket = useSocket();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const { selectedDate, reservedTimes, clientId } = useAppointments();\r\n\r\n  const handleTimeChange = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    const time = event.target.value;\r\n\r\n    setFieldValue(\"time\", time);\r\n\r\n    const newClientId = clientId || nanoid();\r\n    !clientId && dispatch(setClientId(newClientId));\r\n\r\n    selectedDate &&\r\n      dispatch(\r\n        addReservedTimesForDay({\r\n          psychologistId,\r\n          date: selectedDate,\r\n          time,\r\n          clientId: clientId || newClientId,\r\n        })\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket && selectedDate) {\r\n      socket.on(\"newReservedTime\", (reservedTimes) => {\r\n        dispatch(setAddReservedTimesForDay(reservedTimes));\r\n      });\r\n      return () => {\r\n        socket.off(\"newReservedTime\");\r\n      };\r\n    }\r\n  }, [dispatch, socket, selectedDate]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDate) {\r\n      setFieldValue(\"time\", \"\");\r\n    }\r\n  }, [selectedDate, setFieldValue]);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      clientId && dispatch(appointmentIsComplete({ clientId }));\r\n    };\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    };\r\n  }, [dispatch, clientId]);\r\n\r\n  return (\r\n    <SelectTimeStyled\r\n      value={value}\r\n      onChange={handleTimeChange}\r\n      disabled={!selectedDate}\r\n    >\r\n      <option value=\"\" disabled>\r\n        Time\r\n      </option>\r\n\r\n      {reservedTimes.map((timeSlot, index) => (\r\n        <option\r\n          key={index}\r\n          value={timeSlot.time}\r\n          disabled={timeSlot.isReserved}\r\n        >\r\n          {timeSlot.time}\r\n        </option>\r\n      ))}\r\n    </SelectTimeStyled>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport { Formik } from \"formik\";\r\nimport { format } from \"date-fns\";\r\nimport {\r\n  ButtonSubmit,\r\n  CustomModalAppointment,\r\n  DescriptionAppointmentForm,\r\n  FieldStyled,\r\n  FormAppointment,\r\n  TitleAppointmentForm,\r\n  ErrMsg,\r\n  PsychologistAvatar,\r\n  PsychologistCard,\r\n  LabelName,\r\n  Name,\r\n  WrapperField,\r\n  WrapperDateField,\r\n  WrapperDateAndTime,\r\n  WrapperTimeField,\r\n} from \"./ModalAppointment.styled\";\r\nimport { IModalAppointmentProps } from \"../../../interfaces/authInterfaces\";\r\nimport { AppDispatch } from \"../../../redux/store\";\r\nimport { AppointmentShema } from \"../../../validationShemas/psychologistShemas\";\r\nimport { IAppointment } from \"../../../interfaces/appointmentsInterface\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { SelectDate } from \"../../DateAndTimePicker/SelectDate\";\r\nimport { SelectTime } from \"../../DateAndTimePicker/SelectTime/SelectTime\";\r\nimport { CloseModalButton } from \"../../CloseModalButton/CloseModalButton\";\r\nimport {\r\n  addAppointmentForNotLoggedInUser,\r\n  appointmentIsComplete,\r\n  createPayment,\r\n} from \"../../../redux/api\";\r\nimport { setClientId } from \"../../../redux/appointments/appointmentsSlice\";\r\nimport { useAppointments } from \"../../../hooks/useAppointments\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport const ModalAppointmentForNotLoggedInUser: FC<IModalAppointmentProps> = ({\r\n  id,\r\n  avatar,\r\n  name,\r\n  isOpenModal,\r\n  price_per_hour,\r\n  onToggleModal,\r\n}) => {\r\n  const { clientId } = useAppointments();\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const handleSubmit = (values: IAppointment) => {\r\n    clientId &&\r\n      dispatch(\r\n        createPayment({\r\n          amount: price_per_hour,\r\n          currency: \"USD\",\r\n          description: \"Test payment\",\r\n          orderId: clientId,\r\n        })\r\n      );\r\n    clientId &&\r\n      values.date &&\r\n      dispatch(\r\n        addAppointmentForNotLoggedInUser({\r\n          ...values,\r\n          date: format(values.date, \"yyyy-MM-dd\"),\r\n          clientId,\r\n        })\r\n      );\r\n    dispatch(setClientId(null));\r\n    onToggleModal();\r\n  };\r\n\r\n  const handleRequestClose = () => {\r\n    clientId && dispatch(appointmentIsComplete({ clientId }));\r\n    dispatch(setClientId(null));\r\n    onToggleModal();\r\n  };\r\n\r\n  const modalStyles = {\r\n    overlay: {\r\n      zIndex: 1000,\r\n    },\r\n    content: {\r\n      zIndex: 1000,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <CustomModalAppointment\r\n      isOpen={isOpenModal}\r\n      onRequestClose={handleRequestClose}\r\n      contentLabel=\"Appointment Modal\"\r\n      style={modalStyles}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          psychologistId: id,\r\n          clientId: \"\",\r\n          client_name: \"\",\r\n          client_phone: \"\",\r\n          client_email: \"\",\r\n          date: null,\r\n          time: \"\",\r\n        }}\r\n        validationSchema={AppointmentShema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ setFieldValue, values }) => (\r\n          <>\r\n            <TitleAppointmentForm>Appointment</TitleAppointmentForm>\r\n            <DescriptionAppointmentForm>\r\n              Fill out the short form below to book your personal appointment\r\n              with a professional psychologist.\r\n            </DescriptionAppointmentForm>\r\n\r\n            <PsychologistCard>\r\n              <PsychologistAvatar src={avatar} alt=\"avatar\" />\r\n              <div>\r\n                <LabelName>Your psychologist</LabelName>\r\n                <Name>{name}</Name>\r\n              </div>\r\n            </PsychologistCard>\r\n\r\n            <FormAppointment>\r\n              <WrapperField>\r\n                <FieldStyled name=\"client_name\" placeholder=\"Name\" />\r\n                <ErrMsg component=\"div\" name=\"client_name\" />\r\n              </WrapperField>\r\n\r\n              <WrapperField>\r\n                <FieldStyled name=\"client_phone\" placeholder=\"Phone\" />\r\n                <ErrMsg component=\"div\" name=\"client_phone\" />\r\n              </WrapperField>\r\n\r\n              <WrapperField>\r\n                <FieldStyled\r\n                  name=\"client_email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <ErrMsg component=\"div\" name=\"client_email\" />\r\n              </WrapperField>\r\n\r\n              <WrapperDateAndTime>\r\n                <WrapperDateField>\r\n                  <SelectDate\r\n                    psychologistId={id}\r\n                    selected={values.date}\r\n                    setFieldValue={setFieldValue}\r\n                  />\r\n                  <ErrMsg component=\"div\" name=\"date\" />\r\n                </WrapperDateField>\r\n\r\n                <WrapperTimeField>\r\n                  <SelectTime\r\n                    psychologistId={id}\r\n                    value={values.time}\r\n                    setFieldValue={setFieldValue}\r\n                  />\r\n                  <ErrMsg component=\"div\" name=\"time\" />\r\n                </WrapperTimeField>\r\n              </WrapperDateAndTime>\r\n\r\n              <ButtonSubmit type=\"submit\">Send</ButtonSubmit>\r\n\r\n              <div style={{ fontSize: \"10px\", marginTop: \"5px\", color: \"red\" }}>\r\n                Картка для тестової оплати - 4242424242424242\r\n              </div>\r\n              <div style={{ fontSize: \"10px\", color: \"red\" }}>\r\n                Термін дії - будь-яка дата\r\n              </div>\r\n              <div style={{ fontSize: \"10px\", color: \"red\" }}>\r\n                CVV2 - будь-які цифри\r\n              </div>\r\n            </FormAppointment>\r\n          </>\r\n        )}\r\n      </Formik>\r\n\r\n      <CloseModalButton onClick={handleRequestClose} />\r\n    </CustomModalAppointment>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport { Formik } from \"formik\";\r\nimport { format } from \"date-fns\";\r\nimport {\r\n  ButtonSubmit,\r\n  CustomModalAppointment,\r\n  DescriptionAppointmentForm,\r\n  FieldStyled,\r\n  FormAppointment,\r\n  TitleAppointmentForm,\r\n  ErrMsg,\r\n  PsychologistAvatar,\r\n  PsychologistCard,\r\n  LabelName,\r\n  Name,\r\n  WrapperField,\r\n  WrapperDateField,\r\n  WrapperDateAndTime,\r\n  WrapperTimeField,\r\n} from \"./ModalAppointment.styled\";\r\nimport { IModalAppointmentProps } from \"../../../interfaces/authInterfaces\";\r\nimport { AppDispatch } from \"../../../redux/store\";\r\nimport { AppointmentForLoggedInUserShema } from \"../../../validationShemas/psychologistShemas\";\r\nimport { IAppointmentForLoggedInUser } from \"../../../interfaces/appointmentsInterface\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { SelectDate } from \"../../DateAndTimePicker/SelectDate\";\r\nimport { SelectTime } from \"../../DateAndTimePicker/SelectTime/SelectTime\";\r\nimport { CloseModalButton } from \"../../CloseModalButton/CloseModalButton\";\r\nimport {\r\n  addAppointmentForLoggedInUser,\r\n  appointmentIsComplete,\r\n  createPayment,\r\n} from \"../../../redux/api\";\r\nimport { setClientId } from \"../../../redux/appointments/appointmentsSlice\";\r\nimport { useAppointments } from \"../../../hooks/useAppointments\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport const ModalAppointmentForLoggedInUser: FC<IModalAppointmentProps> = ({\r\n  id,\r\n  avatar,\r\n  name,\r\n  isOpenModal,\r\n  price_per_hour,\r\n  onToggleModal,\r\n}) => {\r\n  const { clientId } = useAppointments();\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const handleSubmit = (values: IAppointmentForLoggedInUser) => {\r\n    clientId &&\r\n      dispatch(\r\n        createPayment({\r\n          amount: price_per_hour,\r\n          currency: \"USD\",\r\n          description: \"Test payment\",\r\n          orderId: clientId,\r\n        })\r\n      );\r\n    clientId &&\r\n      values.date &&\r\n      dispatch(\r\n        addAppointmentForLoggedInUser({\r\n          ...values,\r\n          date: format(values.date, \"yyyy-MM-dd\"),\r\n          clientId,\r\n        })\r\n      );\r\n    dispatch(setClientId(null));\r\n    onToggleModal();\r\n  };\r\n\r\n  const handleRequestClose = () => {\r\n    clientId && dispatch(appointmentIsComplete({ clientId }));\r\n    dispatch(setClientId(null));\r\n    onToggleModal();\r\n  };\r\n\r\n  const modalStyles = {\r\n    overlay: {\r\n      zIndex: 1000,\r\n    },\r\n    content: {\r\n      zIndex: 1000,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <CustomModalAppointment\r\n      isOpen={isOpenModal}\r\n      onRequestClose={handleRequestClose}\r\n      contentLabel=\"Appointment Modal\"\r\n      style={modalStyles}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          psychologistId: id,\r\n          clientId: \"\",\r\n          client_phone: \"\",\r\n          date: null,\r\n          time: \"\",\r\n        }}\r\n        validationSchema={AppointmentForLoggedInUserShema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ setFieldValue, values }) => (\r\n          <>\r\n            <TitleAppointmentForm>Appointment</TitleAppointmentForm>\r\n            <DescriptionAppointmentForm>\r\n              Fill out the short form below to book your personal appointment\r\n              with a professional psychologist.\r\n            </DescriptionAppointmentForm>\r\n\r\n            <PsychologistCard>\r\n              <PsychologistAvatar src={avatar} alt=\"avatar\" />\r\n              <div>\r\n                <LabelName>Your psychologist</LabelName>\r\n                <Name>{name}</Name>\r\n              </div>\r\n            </PsychologistCard>\r\n\r\n            <FormAppointment>\r\n              <WrapperField>\r\n                <FieldStyled name=\"client_phone\" placeholder=\"Phone\" />\r\n                <ErrMsg component=\"div\" name=\"client_phone\" />\r\n              </WrapperField>\r\n\r\n              <WrapperDateAndTime>\r\n                <WrapperDateField>\r\n                  <SelectDate\r\n                    psychologistId={id}\r\n                    selected={values.date}\r\n                    setFieldValue={setFieldValue}\r\n                  />\r\n                  <ErrMsg component=\"div\" name=\"date\" />\r\n                </WrapperDateField>\r\n\r\n                <WrapperTimeField>\r\n                  <SelectTime\r\n                    psychologistId={id}\r\n                    value={values.time}\r\n                    setFieldValue={setFieldValue}\r\n                  />\r\n                  <ErrMsg component=\"div\" name=\"time\" />\r\n                </WrapperTimeField>\r\n              </WrapperDateAndTime>\r\n\r\n              <ButtonSubmit type=\"submit\">Send</ButtonSubmit>\r\n\r\n              <div style={{ fontSize: \"10px\", marginTop: \"5px\", color: \"red\" }}>\r\n                Картка для тестової оплати - 4242424242424242\r\n              </div>\r\n              <div style={{ fontSize: \"10px\", color: \"red\" }}>\r\n                Термін дії - будь-яка дата\r\n              </div>\r\n              <div style={{ fontSize: \"10px\", color: \"red\" }}>\r\n                CVV2 - будь-які цифри\r\n              </div>\r\n            </FormAppointment>\r\n          </>\r\n        )}\r\n      </Formik>\r\n\r\n      <CloseModalButton onClick={handleRequestClose} />\r\n    </CustomModalAppointment>\r\n  );\r\n};\r\n","import { FC, MouseEvent, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { format } from \"date-fns\";\r\nimport toast from \"react-hot-toast\";\r\nimport {\r\n  Img,\r\n  ImgCard,\r\n  Profession,\r\n  Rating,\r\n  Delimiter,\r\n  Price,\r\n  PriceAccent,\r\n  ButtonSvg,\r\n  RatingPriceFavoriteWrapper,\r\n  SvgHeart,\r\n  Title,\r\n  List,\r\n  ListItem,\r\n  ListItemAccent,\r\n  About,\r\n  SvgStar,\r\n  ReviewList,\r\n  ReviewerAvatar,\r\n  ReviewerCard,\r\n  ReviewerName,\r\n  ReviewerComment,\r\n  ButtonAction,\r\n  InfoWrapper,\r\n  RatingPriceWrapper,\r\n  ButtonWrapper,\r\n  NotFoundMessage,\r\n  ReviewerDate,\r\n} from \"./PsychologistListCard.styled\";\r\nimport sprite from \"../../images/icons.svg\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { AppDispatch } from \"../../redux/store.ts\";\r\nimport {\r\n  updatePsychologistsCardFavoriteLoggedIn,\r\n  updatePsychologistsCardLoggedIn,\r\n} from \"../../redux/api.ts\";\r\nimport { usePsychologists } from \"../../hooks/usePsychologists.ts\";\r\nimport {\r\n  setClearFavoriteItem,\r\n  setNewAvatarForComment,\r\n  setNewReview,\r\n} from \"../../redux/psychologists/psychologistsSlice.ts\";\r\nimport { IItemProps } from \"../../interfaces/psychologistsInterfaces.ts\";\r\nimport { ModalReview } from \"../Modal/ModalReview/ModalReview.tsx\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { StarRatingComment } from \"../StarRating/StarRatingComment.tsx\";\r\nimport { ModalAppointmentForNotLoggedInUser } from \"../Modal/ModalAppointment/ModalAppointmentForNotLoggedInUser..tsx\";\r\nimport { ModalAppointmentForLoggedInUser } from \"../Modal/ModalAppointment/ModalAppointmentForLoggedInUser.tsx\";\r\nimport { useSocket } from \"../../contexts/SocketContext.tsx\";\r\nimport { useAppointments } from \"../../hooks/useAppointments.ts\";\r\nimport { setResetPaymentInfoAndSignature } from \"../../redux/appointments/appointmentsSlice.ts\";\r\n\r\nexport const PsychologistListCard: FC<IItemProps> = ({ item }) => {\r\n  const [isOpenReviewModal, setIsOpenReviewModal] = useState<boolean>(false);\r\n  const [isOpenModalAppointment, setIsOpenModalAppointment] =\r\n    useState<boolean>(false);\r\n  const { favoriteItems } = usePsychologists();\r\n  const { isLoggedIn } = useAuth();\r\n  const { paymentInfo, paymentSignature } = useAppointments();\r\n\r\n  const formRef = useRef<HTMLFormElement>(null);\r\n\r\n  const socket = useSocket();\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const location = useLocation();\r\n\r\n  const toggleAppointmentModal = () => {\r\n    setIsOpenModalAppointment((prevState: boolean) => !prevState);\r\n  };\r\n\r\n  const toggleReviewModal = () => {\r\n    setIsOpenReviewModal((prevState: boolean) => !prevState);\r\n  };\r\n\r\n  const handleClickAppointment = (event: MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation();\r\n    toggleAppointmentModal();\r\n  };\r\n\r\n  const handleClickReview = (event: MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation();\r\n    toggleReviewModal();\r\n  };\r\n\r\n  const handleSvgClick = (event: MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation();\r\n    if (!isLoggedIn) {\r\n      toast.error(\"This functionality is available only for authorized users!\");\r\n      return;\r\n    }\r\n    if (favoriteItems.length > 0) {\r\n      dispatch(setClearFavoriteItem());\r\n      dispatch(updatePsychologistsCardFavoriteLoggedIn({ id: item._id }));\r\n    } else {\r\n      dispatch(updatePsychologistsCardLoggedIn({ id: item._id }));\r\n    }\r\n  };\r\n\r\n  const isCurrentPsychologistPage =\r\n    location.pathname === `/psychologist/${item._id}`;\r\n\r\n  const messageForLoggedInUsers =\r\n    \"There are no comments yet. Be the first to share your thoughts!\";\r\n\r\n  const messageForNotLoggedInUsers =\r\n    \"There are no comments yet. To leave a comment, please log in!\";\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"newReview\", (review) => {\r\n        dispatch(setNewReview(review));\r\n      });\r\n      return () => {\r\n        socket.off(\"newReview\");\r\n      };\r\n    }\r\n  }, [dispatch, socket]);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"updateAvatarForComment\", (newAvatarForComment) => {\r\n        dispatch(setNewAvatarForComment(newAvatarForComment));\r\n      });\r\n      return () => {\r\n        socket.off(\"updateAvatarForComment\");\r\n      };\r\n    }\r\n  }, [dispatch, socket]);\r\n\r\n  useEffect(() => {\r\n    if (formRef.current && paymentInfo && paymentSignature) {\r\n      formRef.current.submit();\r\n      dispatch(setResetPaymentInfoAndSignature());\r\n    }\r\n  }, [dispatch, paymentInfo, paymentSignature, formRef]);\r\n\r\n  return (\r\n    <>\r\n      <InfoWrapper>\r\n        <ImgCard>\r\n          <Img src={item.avatar_url} alt=\"avatar\" />\r\n        </ImgCard>\r\n        <div>\r\n          <Profession>Psychologist</Profession>\r\n          <Title>{item.name}</Title>\r\n        </div>\r\n      </InfoWrapper>\r\n\r\n      <RatingPriceFavoriteWrapper>\r\n        <RatingPriceWrapper>\r\n          <SvgStar width={16} height={16} $isFilled={item.rating > 0}>\r\n            <use href={`${sprite}#star-icon`} />\r\n          </SvgStar>\r\n          <Rating>Rating: {item.rating}</Rating>\r\n          <Delimiter>|</Delimiter>\r\n          <Price>\r\n            Price / 1 hour: <PriceAccent>{item.price_per_hour}$</PriceAccent>\r\n          </Price>\r\n        </RatingPriceWrapper>\r\n        <ButtonSvg onClick={handleSvgClick}>\r\n          <SvgHeart $owner={item.owner} width={23} height={20}>\r\n            <use href={`${sprite}#heart-icon`} />\r\n          </SvgHeart>\r\n        </ButtonSvg>\r\n      </RatingPriceFavoriteWrapper>\r\n\r\n      <List>\r\n        <ListItem>\r\n          Experience: <ListItemAccent>{item.experience}</ListItemAccent>\r\n        </ListItem>\r\n        <ListItem>\r\n          License: <ListItemAccent>{item.license}</ListItemAccent>\r\n        </ListItem>\r\n        <ListItem>\r\n          Specialization: <ListItemAccent>{item.specialization}</ListItemAccent>\r\n        </ListItem>\r\n        <ListItem>\r\n          Initial_consultation:{\" \"}\r\n          <ListItemAccent>{item.initial_consultation}</ListItemAccent>\r\n        </ListItem>\r\n      </List>\r\n\r\n      {isCurrentPsychologistPage && <About>{item.about}</About>}\r\n      {!isCurrentPsychologistPage && (\r\n        <About>{item.about.slice(0, 200)} ...</About>\r\n      )}\r\n\r\n      {isCurrentPsychologistPage && (\r\n        <ButtonWrapper>\r\n          <ButtonAction onClick={handleClickAppointment}>\r\n            Make an appointment\r\n          </ButtonAction>\r\n          {isLoggedIn && (\r\n            <ButtonAction onClick={handleClickReview}>\r\n              Leave a Review\r\n            </ButtonAction>\r\n          )}\r\n        </ButtonWrapper>\r\n      )}\r\n\r\n      {isCurrentPsychologistPage &&\r\n        item?.reviews &&\r\n        item.reviews.length > 0 && (\r\n          <ReviewList>\r\n            {item.reviews\r\n              .map((review, index) => (\r\n                <li key={index}>\r\n                  <ReviewerCard>\r\n                    <ReviewerAvatar src={review.avatar} />\r\n                    <div>\r\n                      <ReviewerDate>\r\n                        {format(new Date(review.date), \"dd.MM.yyyy\")}\r\n                      </ReviewerDate>\r\n                      <ReviewerName>{review.reviewer}</ReviewerName>\r\n                      <StarRatingComment\r\n                        totalStars={5}\r\n                        selectedStars={review.rating}\r\n                      />\r\n                    </div>\r\n                  </ReviewerCard>\r\n                  <ReviewerComment>{review.comment}</ReviewerComment>\r\n                </li>\r\n              ))\r\n              .reverse()}\r\n          </ReviewList>\r\n        )}\r\n\r\n      {isCurrentPsychologistPage &&\r\n        item?.reviews &&\r\n        item.reviews.length === 0 && (\r\n          <NotFoundMessage>\r\n            {isLoggedIn ? messageForLoggedInUsers : messageForNotLoggedInUsers}\r\n          </NotFoundMessage>\r\n        )}\r\n\r\n      {!isLoggedIn && (\r\n        <ModalAppointmentForNotLoggedInUser\r\n          id={item._id}\r\n          avatar={item.avatar_url}\r\n          name={item.name}\r\n          price_per_hour={item.price_per_hour}\r\n          isOpenModal={isOpenModalAppointment}\r\n          onToggleModal={toggleAppointmentModal}\r\n        />\r\n      )}\r\n\r\n      {isLoggedIn && (\r\n        <ModalAppointmentForLoggedInUser\r\n          id={item._id}\r\n          avatar={item.avatar_url}\r\n          name={item.name}\r\n          price_per_hour={item.price_per_hour}\r\n          isOpenModal={isOpenModalAppointment}\r\n          onToggleModal={toggleAppointmentModal}\r\n        />\r\n      )}\r\n\r\n      {isLoggedIn && (\r\n        <ModalReview\r\n          id={item._id}\r\n          isOpenModal={isOpenReviewModal}\r\n          onToggleModal={toggleReviewModal}\r\n        />\r\n      )}\r\n\r\n      <form\r\n        ref={formRef}\r\n        method=\"POST\"\r\n        action={`https://www.liqpay.ua/api/3/checkout?data=${paymentInfo}&signature=${paymentSignature}`}\r\n        target=\"_blank\"\r\n      >\r\n        <input type=\"hidden\" name=\"data\" value={paymentInfo} />\r\n        <input type=\"hidden\" name=\"signature\" value={paymentSignature} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { RootState } from \"../store\";\r\n\r\nexport const reservedTimesSelector = (state: RootState) =>\r\n  state.appointments.reservedTimes;\r\nexport const selectedDateSelector = (state: RootState) =>\r\n  state.appointments.selectedDate;\r\nexport const clientIdSelector = (state: RootState) =>\r\n  state.appointments.clientId;\r\nexport const appointmentsListSelector = (state: RootState) =>\r\n  state.appointments.appointmentsList;\r\nexport const appointmentSelector = (state: RootState) =>\r\n  state.appointments.appointment;\r\nexport const loadingSelector = (state: RootState) => state.appointments.loading;\r\nexport const paymentInfoSelector = (state: RootState) =>\r\n  state.appointments.paymentInfo;\r\nexport const paymentSignatureSelector = (state: RootState) =>\r\n  state.appointments.paymentSignature;\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  appointmentsListSelector,\r\n  clientIdSelector,\r\n  reservedTimesSelector,\r\n  selectedDateSelector,\r\n  loadingSelector,\r\n  paymentInfoSelector,\r\n  paymentSignatureSelector,\r\n  appointmentSelector,\r\n} from \"../redux/appointments/appointmentsSelectors\";\r\n\r\nexport const useAppointments = () => {\r\n  const selectedDate = useSelector(selectedDateSelector);\r\n  const reservedTimes = useSelector(reservedTimesSelector);\r\n  const clientId = useSelector(clientIdSelector);\r\n  const appointmentsList = useSelector(appointmentsListSelector);\r\n  const appointment = useSelector(appointmentSelector);\r\n  const loading = useSelector(loadingSelector);\r\n  const paymentInfo = useSelector(paymentInfoSelector);\r\n  const paymentSignature = useSelector(paymentSignatureSelector);\r\n\r\n  return {\r\n    selectedDate,\r\n    reservedTimes,\r\n    clientId,\r\n    appointmentsList,\r\n    appointment,\r\n    loading,\r\n    paymentInfo,\r\n    paymentSignature,\r\n  };\r\n};\r\n","import { RootState } from \"../store\";\r\n\r\nexport const itemsSelector = (state: RootState) => state.psychologists.items;\r\nexport const oneItemSelector = (state: RootState) =>\r\n  state.psychologists.oneItem;\r\nexport const favoriteItemsSelector = (state: RootState) =>\r\n  state.psychologists.favoriteItems;\r\nexport const clearFavoriteItemSelector = (state: RootState) =>\r\n  state.psychologists.clearFavoriteItem;\r\nexport const filterSelector = (state: RootState) => state.psychologists.filter;\r\nexport const pagesQuantitySelector = (state: RootState) =>\r\n  state.psychologists.pagesQuantity;\r\nexport const pagesFavoriteQuantitySelector = (state: RootState) =>\r\n  state.psychologists.pagesQuantity;\r\nexport const pageSelector = (state: RootState) => state.psychologists.page;\r\nexport const pageFavoriteSelector = (state: RootState) =>\r\n  state.psychologists.pageFavorite;\r\nexport const loadingSelector = (state: RootState) =>\r\n  state.psychologists.loading;\r\nexport const errorSelector = (state: RootState) => state.psychologists.error;\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  errorSelector,\r\n  loadingSelector,\r\n  favoriteItemsSelector,\r\n  itemsSelector,\r\n  pageFavoriteSelector,\r\n  pageSelector,\r\n  pagesQuantitySelector,\r\n  pagesFavoriteQuantitySelector,\r\n  clearFavoriteItemSelector,\r\n  filterSelector,\r\n  oneItemSelector,\r\n} from \"../redux/psychologists/psychologistsSelecrors\";\r\n\r\nexport const usePsychologists = () => {\r\n  const items = useSelector(itemsSelector);\r\n  const oneItem = useSelector(oneItemSelector);\r\n  const favoriteItems = useSelector(favoriteItemsSelector);\r\n  const clearFavoriteItem = useSelector(clearFavoriteItemSelector);\r\n  const filter = useSelector(filterSelector);\r\n  const pagesQuantity = useSelector(pagesQuantitySelector);\r\n  const pagesFavoriteQuantity = useSelector(pagesFavoriteQuantitySelector);\r\n  const page = useSelector(pageSelector);\r\n  const pageFavorite = useSelector(pageFavoriteSelector);\r\n  const loading = useSelector(loadingSelector);\r\n  const error = useSelector(errorSelector);\r\n\r\n  return {\r\n    items,\r\n    oneItem,\r\n    favoriteItems,\r\n    clearFavoriteItem,\r\n    filter,\r\n    pagesQuantity,\r\n    pagesFavoriteQuantity,\r\n    page,\r\n    pageFavorite,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n"],"names":["InfoWrapper","styled","div","_templateObject","_taggedTemplateLiteral","ImgCard","_templateObject2","Img","img","_templateObject3","Profession","_templateObject4","_ref","theme","colors","secondaryColor","RatingPriceFavoriteWrapper","_templateObject5","RatingPriceWrapper","_templateObject6","SvgStar","svg","_templateObject7","_ref2","primaryColor","_ref3","$isFilled","bgColors","ratingBgGolor","secondaryBgColor","Delimiter","span","_templateObject8","_ref4","Rating","_templateObject9","_ref5","Price","_templateObject10","PriceAccent","_templateObject11","_ref6","accentColor","ButtonSvg","button","_templateObject12","SvgHeart","_templateObject13","_ref7","$owner","undefined","length","accentBgColor","_ref8","Title","_templateObject14","_ref9","List","ul","_templateObject15","ListItem","li","_templateObject16","_ref10","primaryBgColor","ListItemAccent","_templateObject17","_ref11","About","p","_templateObject18","_ref12","ButtonWrapper","_templateObject19","ButtonAction","_templateObject20","_ref13","_ref14","activeAccentBgColor","ReviewList","_templateObject21","ReviewerCard","_templateObject22","ReviewerAvatar","_templateObject23","ReviewerDate","_templateObject24","ReviewerName","_templateObject25","_ref15","ReviewerComment","_templateObject26","_ref16","NotFoundMessage","_templateObject27","_ref17","CustomModalReview","Modal","TitleReviewForm","DescriptionReviewForm","FormReview","Form","LabelStyled","label","FieldStyled","Field","fieldFormColor","ErrMsg","ErrorMessage","errorColor","ButtonSubmit","ReviewShema","Yup","shape","rating","required","test","value","comment","AppointmentShema","client_name","client_phone","client_email","matches","date","time","AppointmentForLoggedInUserShema","StarRatingModal","totalStars","onStarClick","selectedStars","_jsx","children","Array","map","_","index","onClick","fill","href","concat","sprite","TextArea","field","form","props","ModalReview","id","isOpenModal","onToggleModal","setRating","useState","dispatch","useDispatch","useEffect","_jsxs","isOpen","onRequestClose","contentLabel","style","overlay","zIndex","content","Formik","initialValues","validationSchema","onSubmit","values","addReviewForLoggedInUser","setFieldValue","_Fragment","component","name","placeholder","type","CloseModalButton","StarRatingComment","CustomModalAppointment","TitleAppointmentForm","DescriptionAppointmentForm","PsychologistCard","PsychologistAvatar","LabelName","Name","FormAppointment","WrapperField","WrapperDateAndTime","WrapperDateField","WrapperTimeField","SelectDate","psychologistId","selected","setSelectedDate","DatePicker","onChange","format","getReservedTimesForDay","dateFormat","showMonthDropdown","highlightDates","Date","placeholderText","filterDate","day","getDay","isWeekend","SelectTimeStyled","select","SelectTime","socket","useSocket","selectedDate","reservedTimes","clientId","useAppointments","on","setAddReservedTimesForDay","off","handleBeforeUnload","appointmentIsComplete","window","addEventListener","removeEventListener","event","target","newClientId","nanoid","setClientId","addReservedTimesForDay","disabled","timeSlot","isReserved","ModalAppointmentForNotLoggedInUser","avatar","price_per_hour","handleRequestClose","createPayment","amount","currency","description","orderId","addAppointmentForNotLoggedInUser","src","alt","fontSize","marginTop","color","ModalAppointmentForLoggedInUser","addAppointmentForLoggedInUser","PsychologistListCard","item","isOpenReviewModal","setIsOpenReviewModal","isOpenModalAppointment","setIsOpenModalAppointment","favoriteItems","usePsychologists","isLoggedIn","useAuth","paymentInfo","paymentSignature","formRef","useRef","location","useLocation","toggleAppointmentModal","prevState","toggleReviewModal","isCurrentPsychologistPage","pathname","_id","review","setNewReview","newAvatarForComment","setNewAvatarForComment","current","submit","setResetPaymentInfoAndSignature","avatar_url","width","height","stopPropagation","setClearFavoriteItem","updatePsychologistsCardFavoriteLoggedIn","updatePsychologistsCardLoggedIn","toast","error","owner","experience","license","specialization","initial_consultation","about","slice","reviews","reviewer","reverse","ref","method","action","reservedTimesSelector","state","appointments","selectedDateSelector","clientIdSelector","appointmentsListSelector","appointmentsList","appointmentSelector","appointment","loadingSelector","loading","paymentInfoSelector","paymentSignatureSelector","useSelector","itemsSelector","psychologists","items","oneItemSelector","oneItem","favoriteItemsSelector","clearFavoriteItemSelector","clearFavoriteItem","filterSelector","filter","pagesQuantitySelector","pagesQuantity","pagesFavoriteQuantitySelector","pageSelector","page","pageFavoriteSelector","pageFavorite","errorSelector","pagesFavoriteQuantity"],"sourceRoot":""}